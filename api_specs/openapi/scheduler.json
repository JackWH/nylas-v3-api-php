{
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "scheme": "bearer",
                "type":   "http"
            }
        }
    },
    "info":       {
        "description": "Scheduler v3 is a [public beta release](https:///docs/support/product-lifecycle/#beta-release). It is generally stable, but some features might be added or changed before it is generally available.\nThis API reference documentation covers the **Nylas Scheduler API**. See the see the [<b>Administration API documentation</b>](https:///docs/api/v3/admin/) for information about working with Nylas applications, authentication, connectors, and webhook subscriptions.\n\nNylas API is designed using the [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer) ideology to provide simple and predictable URIs to access and modify objects. Requests support [standard HTTP methods](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html) like `GET`, `PUT`, `POST`, and `DELETE`, and [standard status codes](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html). Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise.",
        "title":       "v3 Nylas Scheduler APIs",
        "version":     "1.0.0"
    },
    "openapi":    "3.0.0",
    "paths":      {
        "/v3/grants/{grant_id}/scheduling/configurations":                    {
            "get":  {
                "description": "Returns all Configuration objects.",
                "operationId": "returnAllConfigurationObjects",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The maximum number of objects to return. See [pagination](/docs/api/v3/ecc/#overview--pagination) for more information.",
                        "example":     "50",
                        "in":          "query",
                        "name":        "limit",
                        "schema":      {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "An identifier that specifies which page of data to return. You can get this value from the `next_cursor` response field. See [Pagination](/docs/api/v3/ecc/#overview--pagination) for more information.",
                        "example":     "{{page_token}}",
                        "in":          "query",
                        "name":        "page_token",
                        "schema":      {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token.",
                        "example":     "{{grant_id}}",
                        "in":          "path",
                        "name":        "grant_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "value": "<Error: Could not resolve allOf schema"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Return all Configuration objects",
                "tags":        [
                    "v3 > grants/{grant_id}/scheduling/configurations"
                ]
            },
            "post": {
                "description": "Creates a Configuration object that you use to define the settings and preferences for a scheduling session.",
                "operationId": "createAConfigurationObject",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Content-Type",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token.",
                        "example":     "{{grant_id}}",
                        "in":          "path",
                        "name":        "grant_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": "{\n  \"participants\": [\n    {\n      \"email\": \"{{email}}\",\n      \"name\": \"{{name}}\",\n      \"is_organizer\": true,\n      \"availability\": {\n        \"calendar_ids\": [\"primary\"],\n        \"open_hours\": [\n          {\n            \"days\": [0],\n            \"start\": \"0:00\",\n            \"end\": \"16:00\",\n            \"exdates\": []\n          }\n        ]\n      },\n      \"booking\": {\n        \"calendar_id\": \"primary\"\n      }\n    //   \"timezone\": \"<string>\"\n    }\n  ],\n  \"availability\": {\n    \"duration_minutes\": 30,\n    \"interval_minutes\": 5,\n    \"round_to\": 15,\n    \"availability_rules\": {\n      \"availability_method\": \"collective\",\n      \"buffer\": {\n        \"before\": 0,\n        \"after\": 0\n      },\n      \"default_open_hours\": [\n          {\n            \"days\": [0],\n            \"start\": \"0:00\",\n            \"end\": \"16:00\",\n            \"exdates\": []\n          }\n       ]\n    }\n  },\n  \"event_booking\": {\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"booking_type\": \"booking\"\n    // \"conferencing\": {\n    //   \"autocreate\": \"<object>\"\n    // },\n    // \"disable_emails\": \"<boolean>\"\n  },\n  \"requires_session_auth\": true,\n  \"scheduler\": {\n    \"additional_fields\": {\n    //   \"veniama42\": {\n    //     \"label\": \"<string>\",\n    //     \"type\": \"<string>\",\n    //     \"required\": \"<boolean>\",\n    //     \"pattern\": \"<string>\",\n    //     \"order\": \"<integer>\",\n    //     \"options\": [\n    //       \"<string>\",\n    //       \"<string>\"\n    //     ]\n    //   },\n    //   \"nond55\": {\n    //     \"label\": \"<string>\",\n    //     \"type\": \"<string>\",\n    //     \"required\": \"<boolean>\",\n    //     \"pattern\": \"<string>\",\n    //     \"order\": \"<integer>\",\n    //     \"options\": [\n    //       \"<string>\",\n    //       \"<string>\"\n    //     ]\n    //   }\n    },\n    \"available_days_in_future\": 30,\n    \"min_booking_notice\": 60,\n    \"min_cancellation_notice\": 0,\n    \"cancellation_policy\": \"<string>\",\n    // \"rescheduling_url\": \"<string>\",\n    // \"cancellation_url\": \"<string>\",\n    // \"organizer_confirmation_url\": \"<string>\",\n    // \"confirmation_redirect_url\": \"<string>\",\n    \"hide_rescheduling_options\": false,\n    \"hide_cancellation_options\": false,\n    \"hide_additional_guests\": false,\n    \"email_template\": {\n      \"logo\": \"<string>\",\n      \"booking_confirmed\": {\n        \"title\": \"<string>\",\n        \"body\": \"<string>\"\n      }\n    }\n  }\n}",
                                "type":    "object"
                            }
                        }
                    }
                },
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "ID":                    "<string>",
                                    "availability":          {
                                        "availability_rules": {
                                            "availability_method": "collective",
                                            "buffer":              {
                                                "after":  0,
                                                "before": 0
                                            },
                                            "default_open_hours":  [
                                                {
                                                    "days":    {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "end":     {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "exdates": {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "start":   {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                },
                                                {
                                                    "days":    {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "end":     {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "exdates": {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "start":   {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                }
                                            ]
                                        },
                                        "duration_minutes":   "<integer>",
                                        "interval_minutes":   "<integer>",
                                        "round_to":           15
                                    },
                                    "event_booking":         {
                                        "booking_type":   "booking",
                                        "conferencing":   {
                                            "autocreate": "<object>"
                                        },
                                        "description":    "<string>",
                                        "disable_emails": "<boolean>",
                                        "location":       "<string>",
                                        "timezone":       "<string>",
                                        "title":          "<string>"
                                    },
                                    "participants":          [
                                        {
                                            "availability": {
                                                "calendar_ids": [
                                                    "<string>",
                                                    "<string>"
                                                ],
                                                "open_hours":   null
                                            },
                                            "booking":      {
                                                "calendar_id": "<string>"
                                            },
                                            "email":        "<string>",
                                            "is_organizer": false,
                                            "name":         "<string>",
                                            "timezone":     "<string>"
                                        },
                                        {
                                            "availability": {
                                                "calendar_ids": [
                                                    "<string>",
                                                    "<string>"
                                                ],
                                                "open_hours":   null
                                            },
                                            "booking":      {
                                                "calendar_id": "<string>"
                                            },
                                            "email":        "<string>",
                                            "is_organizer": false,
                                            "name":         "<string>",
                                            "timezone":     "<string>"
                                        }
                                    ],
                                    "requires_session_auth": true,
                                    "scheduler":             {
                                        "additional_fields":          {
                                            "pariaturf": {
                                                "label":    "<string>",
                                                "options":  [
                                                    "<string>",
                                                    "<string>"
                                                ],
                                                "order":    "<integer>",
                                                "pattern":  "<string>",
                                                "required": "<boolean>",
                                                "type":     "<string>"
                                            }
                                        },
                                        "available_days_in_future":   30,
                                        "cancellation_policy":        "<string>",
                                        "cancellation_url":           "<string>",
                                        "confirmation_redirect_url":  "<string>",
                                        "email_template":             {
                                            "booking_confirmed": {
                                                "body":  "<string>",
                                                "title": "<string>"
                                            },
                                            "logo":              "<string>"
                                        },
                                        "hide_additional_guests":     false,
                                        "hide_cancellation_options":  false,
                                        "hide_rescheduling_options":  false,
                                        "min_booking_notice":         60,
                                        "min_cancellation_notice":    0,
                                        "organizer_confirmation_url": "<string>",
                                        "rescheduling_url":           "<string>"
                                    }
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Create a Configuration object",
                "tags":        [
                    "v3 > grants/{grant_id}/scheduling/configurations"
                ]
            }
        },
        "/v3/grants/{grant_id}/scheduling/configurations/{configuration_id}": {
            "delete": {
                "description": "Deletes a specific Configuration object. You cannot delete a Configuration object that has active sessions.",
                "operationId": "deleteAConfigurationObject",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token.",
                        "example":     "{{grant_id}}",
                        "in":          "path",
                        "name":        "grant_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) The ID of the specific Configuration object you want to work with.",
                        "example":     "{{configuration_id}}",
                        "in":          "path",
                        "name":        "configuration_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Not Found",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Delete a Configuration object",
                "tags":        [
                    "v3 > grants/{grant_id}/scheduling/configurations > {configuration_id}"
                ]
            },
            "get":    {
                "description": "Returns a specific Configuration object.",
                "operationId": "returnAConfigurationObject",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token.",
                        "example":     "{{grant_id}}",
                        "in":          "path",
                        "name":        "grant_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) The ID of the specific Configuration object you want to work with.",
                        "example":     "{{configuration_id}}",
                        "in":          "path",
                        "name":        "configuration_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "ID":                    "<string>",
                                    "availability":          {
                                        "availability_rules": {
                                            "availability_method": "collective",
                                            "buffer":              {
                                                "after":  0,
                                                "before": 0
                                            },
                                            "default_open_hours":  null
                                        },
                                        "duration_minutes":   "<integer>",
                                        "interval_minutes":   "<integer>",
                                        "round_to":           15
                                    },
                                    "event_booking":         {
                                        "booking_type":   "booking",
                                        "conferencing":   {
                                            "autocreate": "<object>"
                                        },
                                        "description":    "<string>",
                                        "disable_emails": "<boolean>",
                                        "location":       "<string>",
                                        "timezone":       "<string>",
                                        "title":          "<string>"
                                    },
                                    "participants":          [
                                        {
                                            "availability": {
                                                "calendar_ids": [
                                                    "<string>",
                                                    "<string>"
                                                ]
                                            },
                                            "booking":      {
                                                "calendar_id": "<string>"
                                            },
                                            "email":        "<string>",
                                            "is_organizer": false,
                                            "name":         "<string>",
                                            "timezone":     "<string>"
                                        },
                                        {
                                            "booking":      {
                                                "calendar_id": "<string>"
                                            },
                                            "email":        "<string>",
                                            "is_organizer": false,
                                            "name":         "<string>",
                                            "timezone":     "<string>"
                                        }
                                    ],
                                    "requires_session_auth": true,
                                    "scheduler":             {
                                        "additional_fields":          {
                                            "pariaturf": {
                                                "label":    "<string>",
                                                "options":  [
                                                    "<string>",
                                                    "<string>"
                                                ],
                                                "order":    "<integer>",
                                                "pattern":  "<string>",
                                                "required": "<boolean>",
                                                "type":     "<string>"
                                            }
                                        },
                                        "available_days_in_future":   30,
                                        "cancellation_policy":        "<string>",
                                        "cancellation_url":           "<string>",
                                        "confirmation_redirect_url":  "<string>",
                                        "email_template":             {
                                            "booking_confirmed": {
                                                "body":  "<string>",
                                                "title": "<string>"
                                            },
                                            "logo":              "<string>"
                                        },
                                        "hide_additional_guests":     false,
                                        "hide_cancellation_options":  false,
                                        "hide_rescheduling_options":  false,
                                        "min_booking_notice":         60,
                                        "min_cancellation_notice":    0,
                                        "organizer_confirmation_url": "<string>",
                                        "rescheduling_url":           "<string>"
                                    }
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Not Found",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Return a Configuration object",
                "tags":        [
                    "v3 > grants/{grant_id}/scheduling/configurations > {configuration_id}"
                ]
            },
            "put":    {
                "description": "Updates a specific Configuration object.",
                "operationId": "updateAConfigurationObject",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Content-Type",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token.",
                        "example":     "{{grant_id}}",
                        "in":          "path",
                        "name":        "grant_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) The ID of the specific Configuration object you want to work with.",
                        "example":     "{{configuration_id}}",
                        "in":          "path",
                        "name":        "configuration_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "availability":          {
                                        "availability_rules": {
                                            "availability_method": "collective",
                                            "buffer":              {
                                                "after":  0,
                                                "before": 0
                                            },
                                            "default_open_hours":  [
                                                {
                                                    "days":    [
                                                        "<integer>",
                                                        "<integer>"
                                                    ],
                                                    "end":     "<string>",
                                                    "exdates": [
                                                        "<string>",
                                                        "<string>"
                                                    ],
                                                    "start":   "<string>"
                                                },
                                                {
                                                    "days":    [
                                                        "<integer>",
                                                        "<integer>"
                                                    ],
                                                    "end":     "<string>",
                                                    "exdates": [
                                                        "<string>",
                                                        "<string>"
                                                    ],
                                                    "start":   "<string>"
                                                }
                                            ]
                                        },
                                        "duration_minutes":   "<integer>",
                                        "interval_minutes":   "<integer>",
                                        "round_to":           15
                                    },
                                    "event_booking":         {
                                        "booking_type":   "booking",
                                        "conferencing":   {
                                            "autocreate": "<object>"
                                        },
                                        "description":    "<string>",
                                        "disable_emails": "<boolean>",
                                        "location":       "<string>",
                                        "timezone":       "<string>",
                                        "title":          "<string>"
                                    },
                                    "participants":          [
                                        {
                                            "availability": {
                                                "calendar_ids": [
                                                    "<string>",
                                                    "<string>"
                                                ],
                                                "open_hours":   null
                                            },
                                            "booking":      {
                                                "calendar_id": "<string>"
                                            },
                                            "email":        "<string>",
                                            "is_organizer": false,
                                            "name":         "<string>",
                                            "timezone":     "<string>"
                                        },
                                        {
                                            "availability": {
                                                "calendar_ids": [
                                                    "<string>",
                                                    "<string>"
                                                ],
                                                "open_hours":   null
                                            },
                                            "booking":      {
                                                "calendar_id": "<string>"
                                            },
                                            "email":        "<string>",
                                            "is_organizer": false,
                                            "name":         "<string>",
                                            "timezone":     "<string>"
                                        }
                                    ],
                                    "requires_session_auth": true,
                                    "scheduler":             {
                                        "additional_fields":          {
                                            "aliqua__9b":    {
                                                "label":    "<string>",
                                                "options":  [
                                                    "<string>",
                                                    "<string>"
                                                ],
                                                "order":    "<integer>",
                                                "pattern":  "<string>",
                                                "required": "<boolean>",
                                                "type":     "<string>"
                                            },
                                            "consectetur89": {
                                                "label":    "<string>",
                                                "options":  [
                                                    "<string>",
                                                    "<string>"
                                                ],
                                                "order":    "<integer>",
                                                "pattern":  "<string>",
                                                "required": "<boolean>",
                                                "type":     "<string>"
                                            }
                                        },
                                        "available_days_in_future":   30,
                                        "cancellation_policy":        "<string>",
                                        "cancellation_url":           "<string>",
                                        "confirmation_redirect_url":  "<string>",
                                        "email_template":             {
                                            "booking_confirmed": {
                                                "body":  "<string>",
                                                "title": "<string>"
                                            },
                                            "logo":              "<string>"
                                        },
                                        "hide_additional_guests":     false,
                                        "hide_cancellation_options":  false,
                                        "hide_rescheduling_options":  false,
                                        "min_booking_notice":         60,
                                        "min_cancellation_notice":    0,
                                        "organizer_confirmation_url": "<string>",
                                        "rescheduling_url":           "<string>"
                                    }
                                },
                                "type":    "object"
                            }
                        }
                    }
                },
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "ID":                    "<string>",
                                    "availability":          {
                                        "availability_rules": {
                                            "availability_method": "collective",
                                            "buffer":              {
                                                "after":  0,
                                                "before": 0
                                            },
                                            "default_open_hours":  [
                                                {
                                                    "days":    {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "end":     {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "exdates": {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "start":   {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                },
                                                {
                                                    "days":    {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "end":     {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "exdates": {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    "start":   {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                }
                                            ]
                                        },
                                        "duration_minutes":   "<integer>",
                                        "interval_minutes":   "<integer>",
                                        "round_to":           15
                                    },
                                    "event_booking":         {
                                        "booking_type":   "booking",
                                        "conferencing":   {
                                            "autocreate": "<object>"
                                        },
                                        "description":    "<string>",
                                        "disable_emails": "<boolean>",
                                        "location":       "<string>",
                                        "timezone":       "<string>",
                                        "title":          "<string>"
                                    },
                                    "participants":          [
                                        {
                                            "availability": {
                                                "calendar_ids": [
                                                    "<string>",
                                                    "<string>"
                                                ],
                                                "open_hours":   null
                                            },
                                            "booking":      {
                                                "calendar_id": "<string>"
                                            },
                                            "email":        "<string>",
                                            "is_organizer": false,
                                            "name":         "<string>",
                                            "timezone":     "<string>"
                                        },
                                        {
                                            "availability": {
                                                "calendar_ids": [
                                                    "<string>",
                                                    "<string>"
                                                ],
                                                "open_hours":   null
                                            },
                                            "booking":      {
                                                "calendar_id": "<string>"
                                            },
                                            "email":        "<string>",
                                            "is_organizer": false,
                                            "name":         "<string>",
                                            "timezone":     "<string>"
                                        }
                                    ],
                                    "requires_session_auth": true,
                                    "scheduler":             {
                                        "additional_fields":          {
                                            "pariaturf": {
                                                "label":    "<string>",
                                                "options":  [
                                                    "<string>",
                                                    "<string>"
                                                ],
                                                "order":    "<integer>",
                                                "pattern":  "<string>",
                                                "required": "<boolean>",
                                                "type":     "<string>"
                                            }
                                        },
                                        "available_days_in_future":   30,
                                        "cancellation_policy":        "<string>",
                                        "cancellation_url":           "<string>",
                                        "confirmation_redirect_url":  "<string>",
                                        "email_template":             {
                                            "booking_confirmed": {
                                                "body":  "<string>",
                                                "title": "<string>"
                                            },
                                            "logo":              "<string>"
                                        },
                                        "hide_additional_guests":     false,
                                        "hide_cancellation_options":  false,
                                        "hide_rescheduling_options":  false,
                                        "min_booking_notice":         60,
                                        "min_cancellation_notice":    0,
                                        "organizer_confirmation_url": "<string>",
                                        "rescheduling_url":           "<string>"
                                    }
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Not Found",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Update a Configuration object",
                "tags":        [
                    "v3 > grants/{grant_id}/scheduling/configurations > {configuration_id}"
                ]
            }
        },
        "/v3/scheduling/availability":                                        {
            "get": {
                "description": "Gets available time slots within the specified time range, using the rules defined in the Configuration object.</br></br>   Nylas validates the provided session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter.",
                "operationId": "getAvailability",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) A Unix timestamp for the start time to check availability for.",
                        "example":     "1722291193",
                        "in":          "query",
                        "name":        "start_time",
                        "schema":      {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "(Required) A Unix timestamp for the end time to check availability for.",
                        "example":     "1724969593",
                        "in":          "query",
                        "name":        "end_time",
                        "schema":      {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The ID of the Configuration object whose settings are used for calculating availability. Required only if you're not using session authentication (`requires_session_auth` is set to `false`).",
                        "example":     "{{configuration_id}}",
                        "in":          "query",
                        "name":        "configuration_id",
                        "schema":      {
                            "type": "string"
                        }
                    },
                    {
                        "description": "This is the ID of the booking to reschedule, if you are checking availability to reschedule a round-robin booking. Required only if `availability_method` is `max-fairness` or `max-availability`. See [Retrieving booking IDs](/docs/v3/scheduler/retrieving-booking-ids/) for more information.",
                        "example":     "{{booking_id}}",
                        "in":          "query",
                        "name":        "booking_id",
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "data":       "<object>",
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Not Found",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Get Availability",
                "tags":        [
                    "v3 > scheduling"
                ]
            }
        },
        "/v3/scheduling/bookings":                                            {
            "post": {
                "description": "Books an event with the participants listed in the session's Configuration object, using the details from the Configuration object. The `start_time` and `end_time` must correspond to a valid time slot returned by the [Scheduling  Availability endpoint](/docs/api/v3/scheduler/#get-/v3/scheduling/availability) using the same configuration.</br></br>\n Nylas validates the session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter.",
                "operationId": "bookAnEvent",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Content-Type",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The ID of the Configuration object whose settings are used for the booking. If you're not using session authentication (`requires_session_auth` is set to `false`), this field is required.",
                        "example":     "{{configuration_id}}",
                        "in":          "query",
                        "name":        "configuration_id",
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "additional_fields": {
                                        "amet__39":   "<string>",
                                        "cillum1bc":  "<string>",
                                        "pariaturf7": "<string>",
                                        "sit01":      "<string>"
                                    },
                                    "additional_guests": [
                                        {
                                            "email": "<string>",
                                            "name":  "<string>"
                                        },
                                        {
                                            "email": "<string>",
                                            "name":  "<string>"
                                        }
                                    ],
                                    "end_time":          "<string>",
                                    "guest":             {
                                        "email": "<string>",
                                        "name":  "<string>"
                                    },
                                    "participants":      [
                                        {
                                            "email": "<string>"
                                        },
                                        {
                                            "email": "<string>"
                                        }
                                    ],
                                    "start_time":        "<string>",
                                    "timezone":          "<string>"
                                },
                                "type":    "object"
                            }
                        }
                    }
                },
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "data":       "<object>",
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Not Found",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Book an event",
                "tags":        [
                    "v3 > scheduling > bookings"
                ]
            }
        },
        "/v3/scheduling/bookings/{booking_id}":                               {
            "delete": {
                "description": "Deletes an specific booking. Nylas also cancels the event linked to the booking on the provider.</br></br>   Nylas validates the provided session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter.",
                "operationId": "deleteABooking",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Content-Type",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The ID of the Configuration object whose settings are used for the booking. Required only if you're not using session authentication (`requires_session_auth` is set to `false`).",
                        "example":     "{{configuration_id}}",
                        "in":          "query",
                        "name":        "configuration_id",
                        "schema":      {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) ID of the booking object to access.",
                        "example":     "{{booking_id}}",
                        "in":          "path",
                        "name":        "booking_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Not Found",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Delete a booking",
                "tags":        [
                    "v3 > scheduling > bookings > {booking_id}"
                ]
            },
            "get":    {
                "description": "Returns a specific booking object.</br></br>   Nylas validates the provided session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter.",
                "operationId": "returnABookingObject",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The ID of the Configuration object whose settings are used for the booking. Required only if you're not using session authentication (`requires_session_auth` is set to `false`).",
                        "example":     "{{configuration_id}}",
                        "in":          "query",
                        "name":        "configuration_id",
                        "schema":      {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) ID of the booking object to access.",
                        "example":     "{{booking_id}}",
                        "in":          "path",
                        "name":        "booking_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "data":       "<object>",
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Not Found",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Return a Booking object",
                "tags":        [
                    "v3 > scheduling > bookings > {booking_id}"
                ]
            },
            "patch":  {
                "description": "Reschedules a specific booking. Nylas also updates the event linked to the booking on the provider.</br></br>   Nylas validates the provided session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter.",
                "operationId": "rescheduleABooking",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Content-Type",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The ID of the Configuration object whose settings are used for the booking. Required only if you're not using session authentication (`requires_session_auth` is set to `false`).",
                        "example":     "<string>",
                        "in":          "query",
                        "name":        "configuration_id",
                        "schema":      {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) ID of the booking object to access.",
                        "example":     "{{booking_id}}",
                        "in":          "path",
                        "name":        "booking_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "end_time":   "<string>",
                                    "start_time": "<string>"
                                },
                                "type":    "object"
                            }
                        }
                    }
                },
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Not Found",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Reschedule a booking",
                "tags":        [
                    "v3 > scheduling > bookings > {booking_id}"
                ]
            },
            "put":    {
                "description": "Confirms or cancels a pending booking. Nylas also updates the event linked to the booking on the provider.</br></br>   Nylas validates the provided session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter.",
                "operationId": "confirmABooking",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Content-Type",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The ID of the Configuration object whose settings are used for the booking. Required only if you're not using session authentication (`requires_session_auth` is set to `false`).",
                        "example":     "{{configuration_id}}",
                        "in":          "query",
                        "name":        "configuration_id",
                        "schema":      {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) ID of the booking object to access.",
                        "example":     "{{booking_id}}",
                        "in":          "path",
                        "name":        "booking_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "cancellation_reason": "<string>",
                                    "salt":                "<string>",
                                    "status":              "<string>"
                                },
                                "type":    "object"
                            }
                        }
                    }
                },
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "booking_id":  "<string>",
                                    "description": "<string>",
                                    "event_id":    "<string>",
                                    "organizer":   {
                                        "email": "<string>",
                                        "name":  "<string>"
                                    },
                                    "status":      "<string>",
                                    "title":       "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Not Found",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Confirm a booking",
                "tags":        [
                    "v3 > scheduling > bookings > {booking_id}"
                ]
            }
        },
        "/v3/scheduling/sessions":                                            {
            "post": {
                "description": "Creates a new short-lived session that you can pass to the Scheduling Component to enforce end-user authentication. Your request must include the ID of an existing Configuration object.",
                "operationId": "createASession",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Content-Type",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "configuration_id": "<string>",
                                    "time_to_live":     5
                                },
                                "type":    "object"
                            }
                        }
                    }
                },
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "data":       "<object>",
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Create a session",
                "tags":        [
                    "v3 > scheduling > sessions"
                ]
            }
        },
        "/v3/scheduling/sessions/{session_id}":                               {
            "delete": {
                "description": "Deletes a specific session.",
                "operationId": "deleteASession",
                "parameters":  [
                    {
                        "example": "application/json",
                        "in":      "header",
                        "name":    "Accept",
                        "schema":  {
                            "type": "string"
                        }
                    },
                    {
                        "description": "(Required) The ID of the session to modify.",
                        "example":     "{{session_id}}",
                        "in":          "path",
                        "name":        "session_id",
                        "required":    true,
                        "schema":      {
                            "type": "string"
                        }
                    }
                ],
                "responses":   {
                    "200": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message":        "<string>",
                                        "provider_error": "<object>",
                                        "type":           "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "content":     {
                            "application/json": {
                                "example": {
                                    "error":      {
                                        "message": "<string>",
                                        "type":    "<string>"
                                    },
                                    "request_id": "<string>"
                                },
                                "schema":  {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Gateway Timeout",
                        "headers":     {
                            "Content-Type": {
                                "schema": {
                                    "example": "application/json",
                                    "type":    "string"
                                }
                            }
                        }
                    }
                },
                "security":    [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary":     "Delete a session",
                "tags":        [
                    "v3 > scheduling > sessions"
                ]
            }
        }
    },
    "servers":    [
        {
            "description": "US server",
            "url":         "https://api.us.nylas.com"
        },
        {
            "description": "EU server",
            "url":         "https://api.eu.nylas.com"
        }
    ],
    "tags":       [
        {
            "name": "v3"
        },
        {
            "name": "v3 > grants/{grant_id}/scheduling/configurations"
        },
        {
            "name": "v3 > grants/{grant_id}/scheduling/configurations > {configuration_id}"
        },
        {
            "name": "v3 > scheduling"
        },
        {
            "name": "v3 > scheduling > sessions"
        },
        {
            "name": "v3 > scheduling > bookings"
        },
        {
            "name": "v3 > scheduling > bookings > {booking_id}"
        }
    ]
}
