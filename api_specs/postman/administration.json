{
	"info": {
		"name": "v3 Nylas Administration API",
		"description": "**This API reference covers the **Administration APIs** only.  \nSee the [<b>Email and Calendar API reference</b>](https:///docs/api/v3-beta/ecc/) for information on working with Email and Calendar APIs.\n\nThe **Nylas Administration APIs** are how you query and change your Nylas applications, including the application's authentication configuration, provider settings, and webhook subscriptions. You can also use Administration APIs to query your application to list the Grants (specific permissions to access user data) that are associated with each of your Nylas applications.\n\nThe Nylas API is designed using the [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer) ideology to provide simple and predictable URIs to access and modify objects. Requests support [standard HTTP methods](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html) like GET, PUT, POST, and DELETE and [standard status codes](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html). Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise.\n\n## Nylas authentication in v3\n\nYou can find more information about the Nylas Administration APIs in the main documentation set:\n\n- [Authentication in v3](https:///docs/developer-guide/v3-authentication/)\n    - [Create Grants with OAuth authentication + API key](https:///docs/developer-guide/v3-authentication/hosted-oauth-apikey/)\n    - [Create Grants with OAuth authentication + Access token](https:///docs/developer-guide/v3-authentication/hosted-oauth-accesstoken/)\n    - [Create Grants with custom authentication](https:///docs/developer-guide/v3-authentication/custom/) (called \"native\" authentication in v2)\n    - [Create Grants with IMAP authentication](https:///docs/developer-guide/v3-authentication/imap/)\n- [Bulk authentication in v3](https:///docs/developer-guide/v3-authentication/bulk-auth-grants/)\n- [v3 event codes](https:///docs/v3-beta/event-codes/)\n- [Virtual Calendars in v3](https:///docs/developer-guide/v3-authentication/virtual-calendars/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_collection_link": "https://www.postman.com/trynylas/nylas-api/collection/f37nn63/v3-nylas-administration-api"
	},
	"item": [
		{
			"name": "v3",
			"item": [
				{
					"name": "applications",
					"item": [
						{
							"name": "redirect-uris",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get callback URI",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/applications/redirect-uris/{{callback_id}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"applications",
														"redirect-uris",
														"{{callback_id}}"
													]
												},
												"description": "Gets a Callback URI based on ID"
											},
											"response": [
												{
													"name": "Returns Callback URI object",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/applications/redirect-uris/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"applications",
																"redirect-uris",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"url\": \"<string>\",\n    \"platform\": \"<string>\",\n    \"settings\": {\n      \"origin\": \"<string>\",\n      \"bundle_id\": \"<string>\",\n      \"app_store_id\": \"<string>\",\n      \"team_id\": \"<string>\",\n      \"package_name\": \"<string>\",\n      \"sha1_certificate_fingerprint\": \"<string>\"\n    }\n  }\n}"
												},
												{
													"name": "Not Authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/applications/redirect-uris/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"applications",
																"redirect-uris",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/applications/redirect-uris/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"applications",
																"redirect-uris",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update a callback URI",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"url\": \"<string>\",\n  \"platform\": \"<string>\",\n  \"settings\": {\n    \"origin\": \"<string>\",\n    \"bundle_id\": \"<string>\",\n    \"package_name\": \"<string>\",\n    \"sha1_certificate_fingerprint\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/applications/redirect-uris/{{callback_id}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"applications",
														"redirect-uris",
														"{{callback_id}}"
													]
												},
												"description": "Update a Callback URI based on ID"
											},
											"response": [
												{
													"name": "Returns Callback URI object",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"url\": \"<string>\",\n  \"platform\": \"<string>\",\n  \"settings\": {\n    \"origin\": \"<string>\",\n    \"bundle_id\": \"<string>\",\n    \"package_name\": \"<string>\",\n    \"sha1_certificate_fingerprint\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/applications/redirect-uris/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"applications",
																"redirect-uris",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"url\": \"<string>\",\n    \"platform\": \"<string>\",\n    \"settings\": {\n      \"origin\": \"<string>\",\n      \"bundle_id\": \"<string>\",\n      \"app_store_id\": \"<string>\",\n      \"team_id\": \"<string>\",\n      \"package_name\": \"<string>\",\n      \"sha1_certificate_fingerprint\": \"<string>\"\n    }\n  }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"url\": \"<string>\",\n  \"platform\": \"<string>\",\n  \"settings\": {\n    \"origin\": \"<string>\",\n    \"bundle_id\": \"<string>\",\n    \"package_name\": \"<string>\",\n    \"sha1_certificate_fingerprint\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/applications/redirect-uris/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"applications",
																"redirect-uris",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Not Authenticated",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"url\": \"<string>\",\n  \"platform\": \"<string>\",\n  \"settings\": {\n    \"origin\": \"<string>\",\n    \"bundle_id\": \"<string>\",\n    \"package_name\": \"<string>\",\n    \"sha1_certificate_fingerprint\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/applications/redirect-uris/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"applications",
																"redirect-uris",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"url\": \"<string>\",\n  \"platform\": \"<string>\",\n  \"settings\": {\n    \"origin\": \"<string>\",\n    \"bundle_id\": \"<string>\",\n    \"package_name\": \"<string>\",\n    \"sha1_certificate_fingerprint\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/applications/redirect-uris/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"applications",
																"redirect-uris",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete a callback URI",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/applications/redirect-uris/{{callback_id}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"applications",
														"redirect-uris",
														"{{callback_id}}"
													]
												},
												"description": "Delete existing Callback URI based on it's ID"
											},
											"response": [
												{
													"name": "Delete Succeed",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/applications/redirect-uris/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"applications",
																"redirect-uris",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Not Authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/applications/redirect-uris/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"applications",
																"redirect-uris",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/applications/redirect-uris/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"applications",
																"redirect-uris",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get an application's callback URIs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/applications/redirect-uris",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"applications",
												"redirect-uris"
											]
										},
										"description": "Get an application's callback URIs"
									},
									"response": [
										{
											"name": "Returns a list of Callback URI objects",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/applications/redirect-uris",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"applications",
														"redirect-uris"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"app_store_id\": \"<string>\",\n        \"team_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"app_store_id\": \"<string>\",\n        \"team_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/applications/redirect-uris",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"applications",
														"redirect-uris"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": {\n    \"request_id\": \"<string>\",\n    \"error\": {\n      \"type\": \"<string>\",\n      \"message\": \"Bad request\",\n      \"provider_error\": \"<object>\"\n    }\n  }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/applications/redirect-uris",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"applications",
														"redirect-uris"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"request_id\": \"<string>\",\n    \"error\": {\n      \"type\": \"<string>\",\n      \"message\": \"Resource not found\",\n      \"provider_error\": \"<object>\"\n    }\n  }\n}"
										}
									]
								},
								{
									"name": "Add callback URI to application",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"<string>\",\n  \"platform\": \"<string>\",\n  \"settings\": {\n    \"origin\": \"<string>\",\n    \"bundle_id\": \"<string>\",\n    \"package_name\": \"<string>\",\n    \"sha1_certificate_fingerprint\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/applications/redirect-uris",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"applications",
												"redirect-uris"
											]
										},
										"description": "Add new Callback URI to an existing Application"
									},
									"response": [
										{
											"name": "Returns CallbackURI object",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"url\": \"<string>\",\n  \"platform\": \"<string>\",\n  \"settings\": {\n    \"origin\": \"<string>\",\n    \"bundle_id\": \"<string>\",\n    \"package_name\": \"<string>\",\n    \"sha1_certificate_fingerprint\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/applications/redirect-uris",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"applications",
														"redirect-uris"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"url\": \"<string>\",\n    \"platform\": \"<string>\",\n    \"settings\": {\n      \"origin\": \"<string>\",\n      \"bundle_id\": \"<string>\",\n      \"app_store_id\": \"<string>\",\n      \"team_id\": \"<string>\",\n      \"package_name\": \"<string>\",\n      \"sha1_certificate_fingerprint\": \"<string>\"\n    }\n  }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"url\": \"<string>\",\n  \"platform\": \"<string>\",\n  \"settings\": {\n    \"origin\": \"<string>\",\n    \"bundle_id\": \"<string>\",\n    \"package_name\": \"<string>\",\n    \"sha1_certificate_fingerprint\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/applications/redirect-uris",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"applications",
														"redirect-uris"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Not Authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"url\": \"<string>\",\n  \"platform\": \"<string>\",\n  \"settings\": {\n    \"origin\": \"<string>\",\n    \"bundle_id\": \"<string>\",\n    \"package_name\": \"<string>\",\n    \"sha1_certificate_fingerprint\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/applications/redirect-uris",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"applications",
														"redirect-uris"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get application",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"applications"
									]
								},
								"description": "Gets the application object"
							},
							"response": [
								{
									"name": "Returns Application object",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/applications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"application_id\": \"<string>\",\n    \"organization_id\": \"<string>\",\n    \"region\": \"<string>\",\n    \"environment\": \"<string>\",\n    \"branding\": {\n      \"name\": \"<string>\",\n      \"icon_url\": \"<string>\",\n      \"website_url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    \"hosted_authentication\": {\n      \"background_image_url\": \"<string>\",\n      \"alignment\": \"<string>\",\n      \"color_primary\": \"<string>\",\n      \"color_secondary\": \"<string>\",\n      \"title\": \"<string>\",\n      \"subtitle\": \"<string>\",\n      \"background_color\": \"<string>\",\n      \"spacing\": \"<integer>\"\n    },\n    \"callback_uris\": [\n      {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\",\n        \"platform\": \"<string>\",\n        \"settings\": {\n          \"origin\": \"<string>\",\n          \"bundle_id\": \"<string>\",\n          \"package_name\": \"<string>\",\n          \"sha1_certificate_fingerprint\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\",\n        \"platform\": \"<string>\",\n        \"settings\": {\n          \"origin\": \"<string>\",\n          \"bundle_id\": \"<string>\",\n          \"package_name\": \"<string>\",\n          \"sha1_certificate_fingerprint\": \"<string>\"\n        }\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/applications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"applications"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Not Authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/applications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"applications"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Update application",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"application_id\": \"<string>\",\n  \"organization_id\": \"<string>\",\n  \"region\": \"<string>\",\n  \"environment\": \"<string>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"icon_url\": \"<string>\",\n    \"website_url\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"hosted_authentication\": {\n    \"background_image_url\": \"<string>\",\n    \"alignment\": \"<string>\",\n    \"color_primary\": \"<string>\",\n    \"color_secondary\": \"<string>\",\n    \"title\": \"<string>\",\n    \"subtitle\": \"<string>\",\n    \"background_color\": \"<string>\",\n    \"spacing\": \"<integer>\"\n  },\n  \"callback_uris\": [\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v3/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"applications"
									]
								},
								"description": "Updates an application. Selects the application to update based on the `client_id` associated with the API key.\n<div style=\"padding:24px; background-color: #FFFEE6; border: 1px solid #9E9600; color: #161717\"><b>v3 Beta Note</b>: This API endpoint will be removed in the future when application settings are available in the v3 Dashboard.</div>\n"
							},
							"response": [
								{
									"name": "Returns application object",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"application_id\": \"<string>\",\n  \"organization_id\": \"<string>\",\n  \"region\": \"<string>\",\n  \"environment\": \"<string>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"icon_url\": \"<string>\",\n    \"website_url\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"hosted_authentication\": {\n    \"background_image_url\": \"<string>\",\n    \"alignment\": \"<string>\",\n    \"color_primary\": \"<string>\",\n    \"color_secondary\": \"<string>\",\n    \"title\": \"<string>\",\n    \"subtitle\": \"<string>\",\n    \"background_color\": \"<string>\",\n    \"spacing\": \"<integer>\"\n  },\n  \"callback_uris\": [\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/applications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": {\n    \"application_id\": \"<string>\",\n    \"organization_id\": \"<string>\",\n    \"region\": \"<string>\",\n    \"environment\": \"<string>\",\n    \"branding\": {\n      \"name\": \"<string>\",\n      \"icon_url\": \"<string>\",\n      \"website_url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    \"hosted_authentication\": {\n      \"background_image_url\": \"<string>\",\n      \"alignment\": \"<string>\",\n      \"color_primary\": \"<string>\",\n      \"color_secondary\": \"<string>\",\n      \"title\": \"<string>\",\n      \"subtitle\": \"<string>\",\n      \"background_color\": \"<string>\",\n      \"spacing\": \"<integer>\"\n    },\n    \"callback_uris\": [\n      {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\",\n        \"platform\": \"<string>\",\n        \"settings\": {\n          \"origin\": \"<string>\",\n          \"bundle_id\": \"<string>\",\n          \"package_name\": \"<string>\",\n          \"sha1_certificate_fingerprint\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<string>\",\n        \"url\": \"<string>\",\n        \"platform\": \"<string>\",\n        \"settings\": {\n          \"origin\": \"<string>\",\n          \"bundle_id\": \"<string>\",\n          \"package_name\": \"<string>\",\n          \"sha1_certificate_fingerprint\": \"<string>\"\n        }\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"application_id\": \"<string>\",\n  \"organization_id\": \"<string>\",\n  \"region\": \"<string>\",\n  \"environment\": \"<string>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"icon_url\": \"<string>\",\n    \"website_url\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"hosted_authentication\": {\n    \"background_image_url\": \"<string>\",\n    \"alignment\": \"<string>\",\n    \"color_primary\": \"<string>\",\n    \"color_secondary\": \"<string>\",\n    \"title\": \"<string>\",\n    \"subtitle\": \"<string>\",\n    \"background_color\": \"<string>\",\n    \"spacing\": \"<integer>\"\n  },\n  \"callback_uris\": [\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/applications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"applications"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Not Authenticated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"application_id\": \"<string>\",\n  \"organization_id\": \"<string>\",\n  \"region\": \"<string>\",\n  \"environment\": \"<string>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"icon_url\": \"<string>\",\n    \"website_url\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"hosted_authentication\": {\n    \"background_image_url\": \"<string>\",\n    \"alignment\": \"<string>\",\n    \"color_primary\": \"<string>\",\n    \"color_secondary\": \"<string>\",\n    \"title\": \"<string>\",\n    \"subtitle\": \"<string>\",\n    \"background_color\": \"<string>\",\n    \"spacing\": \"<integer>\"\n  },\n  \"callback_uris\": [\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/applications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"applications"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"application_id\": \"<string>\",\n  \"organization_id\": \"<string>\",\n  \"region\": \"<string>\",\n  \"environment\": \"<string>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"icon_url\": \"<string>\",\n    \"website_url\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"hosted_authentication\": {\n    \"background_image_url\": \"<string>\",\n    \"alignment\": \"<string>\",\n    \"color_primary\": \"<string>\",\n    \"color_secondary\": \"<string>\",\n    \"title\": \"<string>\",\n    \"subtitle\": \"<string>\",\n    \"background_color\": \"<string>\",\n    \"spacing\": \"<integer>\"\n  },\n  \"callback_uris\": [\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"settings\": {\n        \"origin\": \"<string>\",\n        \"bundle_id\": \"<string>\",\n        \"package_name\": \"<string>\",\n        \"sha1_certificate_fingerprint\": \"<string>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/applications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"applications"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "connectors",
					"item": [
						{
							"name": "{provider}",
							"item": [
								{
									"name": "creds",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Get credential by ID",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"connectors",
																":provider",
																"creds",
																":id"
															],
															"variable": [
																{
																	"key": "provider",
																	"value": "{{provider}}",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "{{credential_id}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get credential by specified ID"
													},
													"response": [
														{
															"name": "Returns Credential object",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"connectors",
																		":provider",
																		"creds",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "provider",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"created_at\": \"<integer>\",\n    \"updated_at\": \"<integer>\"\n  }\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"connectors",
																		":provider",
																		"creds",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "provider",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
														},
														{
															"name": "Not Authenticated",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"connectors",
																		":provider",
																		"creds",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "provider",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update credential by ID",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"google\",\n  \"credential_data\": {\n    \"client_id\": \"{{google_client_id}}\",\n    \"client_secret\": \"{{google_client_secret}}\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"connectors",
																":provider",
																"creds",
																":id"
															],
															"variable": [
																{
																	"key": "provider",
																	"value": "{{provider}}",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "{{credential_id}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Patch credential by specified ID"
													},
													"response": [
														{
															"name": "Returns updated Credential object",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"credential_data\": \"<object>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"connectors",
																		":provider",
																		"creds",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "provider",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"created_at\": \"<integer>\",\n    \"updated_at\": \"<integer>\"\n  }\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"credential_data\": \"<object>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"connectors",
																		":provider",
																		"creds",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "provider",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
														},
														{
															"name": "Not Authenticated",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"credential_data\": \"<object>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"connectors",
																		":provider",
																		"creds",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "provider",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Delete credential by ID",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"connectors",
																":provider",
																"creds",
																":id"
															],
															"variable": [
																{
																	"key": "provider",
																	"value": "{{provider}}",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "{{credential_id}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete credential by specified ID"
													},
													"response": [
														{
															"name": "Delete Credential from database",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"connectors",
																		":provider",
																		"creds",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "provider",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"request_id\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"connectors",
																		":provider",
																		"creds",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "provider",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
														},
														{
															"name": "Not Authenticated",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v3/connectors/:provider/creds/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"connectors",
																		":provider",
																		"creds",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "provider",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Create credential",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"google\",\n  \"credential_type\": \"connector\",\n  \"credential_data\": {\n    \"client_id\": \"{{google_client_id}}\",\n    \"client_secret\": \"{{google_client_secret}}\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/connectors/:provider/creds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"connectors",
														":provider",
														"creds"
													],
													"variable": [
														{
															"key": "provider",
															"value": "{{provider}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Manually create a new credential record.\n"
											},
											"response": [
												{
													"name": "Credential Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"credential_type\": \"<string>\",\n  \"credential_data\": {}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/connectors/:provider/creds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"connectors",
																":provider",
																"creds"
															],
															"variable": [
																{
																	"key": "provider",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"created_at\": \"<integer>\",\n    \"updated_at\": \"<integer>\"\n  }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"credential_type\": \"<string>\",\n  \"credential_data\": {}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/connectors/:provider/creds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"connectors",
																":provider",
																"creds"
															],
															"variable": [
																{
																	"key": "provider",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Not Authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"credential_type\": \"<string>\",\n  \"credential_data\": {}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/connectors/:provider/creds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"connectors",
																":provider",
																"creds"
															],
															"variable": [
																{
																	"key": "provider",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												}
											]
										},
										{
											"name": "List credentials",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/connectors/:provider/creds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"connectors",
														":provider",
														"creds"
													],
													"query": [
														{
															"key": "limit",
															"value": "10",
															"description": "Limit the number of results",
															"disabled": true
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Offset results",
															"disabled": true
														},
														{
															"key": "sort_by",
															"value": "created_at",
															"description": "Sort entries by field name",
															"disabled": true
														},
														{
															"key": "order_by",
															"value": "desc",
															"description": "Specify ascending or descending order",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "provider",
															"value": "{{provider}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Lists credentials for given provider"
											},
											"response": [
												{
													"name": "Returns array of Credential objects",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/connectors/:provider/creds?limit=10&offset=0&sort_by=created_at&order_by=desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"connectors",
																":provider",
																"creds"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "10"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "sort_by",
																	"value": "created_at"
																},
																{
																	"key": "order_by",
																	"value": "desc"
																}
															],
															"variable": [
																{
																	"key": "provider",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"created_at\": \"<integer>\",\n      \"updated_at\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"created_at\": \"<integer>\",\n      \"updated_at\": \"<integer>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\"\n}"
												},
												{
													"name": "Not Authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/connectors/:provider/creds?limit=10&offset=0&sort_by=created_at&order_by=desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"connectors",
																":provider",
																"creds"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "10"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "sort_by",
																	"value": "created_at"
																},
																{
																	"key": "order_by",
																	"value": "desc"
																}
															],
															"variable": [
																{
																	"key": "provider",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/connectors/:provider/creds?limit=10&offset=0&sort_by=created_at&order_by=desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"connectors",
																":provider",
																"creds"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "10"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "sort_by",
																	"value": "created_at"
																},
																{
																	"key": "order_by",
																	"value": "desc"
																}
															],
															"variable": [
																{
																	"key": "provider",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a connector",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": {\n    \"client_id\": \"<string>\",\n    \"client_secret\": \"<string>\",\n    \"topic_name\": \"<string>\"\n  },\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/connectors/:provider",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connectors",
												":provider"
											],
											"variable": [
												{
													"key": "provider"
												}
											]
										},
										"description": "Create a connector in your Nylas application. Connectors are how your Nylas application stores information needed to connect to external services. Creating a connector is the first step in setting up authentication for your project. \n<!-- Customer Developer onboarding setup up OAuth strategy with ClientID/Secrets.-->\n"
									},
									"response": [
										{
											"name": "Connector Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": {\n    \"client_id\": \"<string>\",\n    \"client_secret\": \"<string>\",\n    \"topic_name\": \"<string>\"\n  },\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/connectors/:provider",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"connectors",
														":provider"
													],
													"variable": [
														{
															"key": "provider"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"provider\": \"<string>\",\n    \"settings\": \"<object>\",\n    \"scope\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": {\n    \"client_id\": \"<string>\",\n    \"client_secret\": \"<string>\",\n    \"topic_name\": \"<string>\"\n  },\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/connectors/:provider",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"connectors",
														":provider"
													],
													"variable": [
														{
															"key": "provider"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Not Authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": {\n    \"client_id\": \"<string>\",\n    \"client_secret\": \"<string>\",\n    \"topic_name\": \"<string>\"\n  },\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/connectors/:provider",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"connectors",
														":provider"
													],
													"variable": [
														{
															"key": "provider"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										}
									]
								},
								{
									"name": "List connectors",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/connectors/:provider",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connectors",
												":provider"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit the number of results in a connector list",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset the list of results in a connector list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "provider",
													"value": "google"
												}
											]
										},
										"description": "Lists the connectors in your Nylas application"
									},
									"response": [
										{
											"name": "Returns array of connector objects",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/connectors/:provider?limit=<integer>&offset=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"connectors",
														":provider"
													],
													"query": [
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "offset",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "provider"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": [\n    {\n      \"provider\": \"<string>\",\n      \"settings\": \"<object>\",\n      \"scope\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"provider\": \"<string>\",\n      \"settings\": \"<object>\",\n      \"scope\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\"\n}"
										},
										{
											"name": "Not Authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/connectors/:provider?limit=<integer>&offset=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"connectors",
														":provider"
													],
													"query": [
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "offset",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "provider"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/connectors/:provider?limit=<integer>&offset=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"connectors",
														":provider"
													],
													"query": [
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "offset",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "provider"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create a connector",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": {\n    \"client_id\": \"<string>\",\n    \"client_secret\": \"<string>\",\n    \"topic_name\": \"<string>\"\n  },\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/connectors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"connectors"
									]
								},
								"description": "Create a connector in your Nylas application. Connectors are how your Nylas application stores information needed to connect to external services. Creating a connector is the first step in setting up authentication for your project. \n<!-- Customer Developer onboarding setup up OAuth strategy with ClientID/Secrets.-->\n"
							},
							"response": [
								{
									"name": "Connector Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": {\n    \"client_id\": \"<string>\",\n    \"client_secret\": \"<string>\",\n    \"topic_name\": \"<string>\"\n  },\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/connectors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connectors"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"provider\": \"<string>\",\n    \"settings\": \"<object>\",\n    \"scope\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": {\n    \"client_id\": \"<string>\",\n    \"client_secret\": \"<string>\",\n    \"topic_name\": \"<string>\"\n  },\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/connectors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connectors"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Not Authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": {\n    \"client_id\": \"<string>\",\n    \"client_secret\": \"<string>\",\n    \"topic_name\": \"<string>\"\n  },\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/connectors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connectors"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								}
							]
						},
						{
							"name": "List connectors",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/connectors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"connectors"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>",
											"description": "Limit the number of results in a connector list",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset the list of results in a connector list",
											"disabled": true
										}
									]
								},
								"description": "Lists the connectors in your Nylas application"
							},
							"response": [
								{
									"name": "Returns array of connector objects",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/connectors?limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connectors"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "offset",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": [\n    {\n      \"provider\": \"<string>\",\n      \"settings\": \"<object>\",\n      \"scope\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"provider\": \"<string>\",\n      \"settings\": \"<object>\",\n      \"scope\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\"\n}"
								},
								{
									"name": "Not Authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/connectors?limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connectors"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "offset",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/connectors?limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connectors"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "offset",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "connect",
					"item": [
						{
							"name": "Custom Authentication",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": \"<object>\",\n  \"state\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/connect/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"connect",
										"custom"
									]
								},
								"description": "Manually create a grant using a custom authentication flow.\nIf you are handling the OAuth flow in your own application or want to migrate existing users,\nCustom Authentication allows you to provide the user `refresh_token` in order to create a grant.\n\nIf a user previously authenticated with your Nylas application using the same email account, Nylas detects this and re-authenticates the existing grant instead of creating a new one. The API response contains the existing `grant_id` for the user.\n"
							},
							"response": [
								{
									"name": "Grant Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": \"<object>\",\n  \"state\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/connect/custom",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connect",
												"custom"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"provider\": \"<string>\",\n    \"scope\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"created_at\": \"<integer>\",\n    \"grant_status\": \"<string>\",\n    \"email\": \"<string>\",\n    \"user_agent\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"state\": \"<string>\",\n    \"updated_at\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": \"<object>\",\n  \"state\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/connect/custom",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connect",
												"custom"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Not Authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provider\": \"<string>\",\n  \"settings\": \"<object>\",\n  \"state\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/connect/custom",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connect",
												"custom"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Hosted OAuth - Authorization Request (With PKCE)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "clientSecret",
											"value": "{{bearerToken}}",
											"type": "string"
										},
										{
											"key": "code_verifier",
											"value": "nylas",
											"type": "string"
										},
										{
											"key": "challengeAlgorithm",
											"value": "plain",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code_with_pkce",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "{{baseUrl}}/v3/connect/auth?client_id={{application_id}}&provider={{provider}}&redirect_uri={{redirect_uri}}&response_type={{response_type}}&login_hint={{email}}",
											"type": "string"
										},
										{
											"key": "client_authentication",
											"value": "header",
											"type": "string"
										},
										{
											"key": "clientId",
											"value": "{{nylas_client_id}}",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "{{baseUrl}}/v3/connect/token",
											"type": "string"
										},
										{
											"key": "tokenName",
											"value": "nylas-pkce",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/connect/auth?client_id={{application_id}}&provider={{provider}}&redirect_uri={{redirect_uri}}&response_type={{response_type}}&login_hint={{email}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"connect",
										"auth"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{application_id}}",
											"description": "(Required) Nylas application client_id (or application id)"
										},
										{
											"key": "provider",
											"value": "{{provider}}",
											"description": "The Connector provider type that you already had set up with Nylas for this application. If not set, the user is directed to the Hosted Login screen and prompted to select a provider."
										},
										{
											"key": "redirect_uri",
											"value": "{{redirect_uri}}",
											"description": "(Required) Redirect URI (aka callback URI) of the application"
										},
										{
											"key": "response_type",
											"value": "{{response_type}}",
											"description": "(Required) Should be set to `code` for Nylas OAuth2.0 flow, and set to 'adminconsent' for Microsoft admin consent service account flow."
										},
										{
											"key": "scope",
											"value": "<string>",
											"description": "A space-delimited list of scopes that identify the resources that your application could access on the user's behalf. If no scope is given, all of the default connector's scopes are used.",
											"disabled": true
										},
										{
											"key": "prompt",
											"value": "select_provider",
											"description": "Optional prompt for Hosted Login screen. If used can accept multiple values separated by a comma without spaces in between, also order of prompts effects the UI of the Hosted Login screen. If provider is set the user gets redirected to the provider screen directly and the prompt is ignored.",
											"disabled": true
										},
										{
											"key": "state",
											"value": "<string>",
											"description": "Optional state to be returned after authentication",
											"disabled": true
										},
										{
											"key": "login_hint",
											"value": "{{email}}",
											"description": "Prefill the login name (usually email) during authorization flow.  If a Grant for the provided email already exists, a Grant's re-auth will automatically be initiated."
										},
										{
											"key": "access_type",
											"value": "<string>",
											"description": "If the exchange token should return refresh_token too. Not suitable for client side or JavaScript apps.",
											"disabled": true
										},
										{
											"key": "code_challenge",
											"value": "<string>",
											"description": "Specifies a Base64 without padding encoded code_verifier that will be used as a server-side challenge during authorization code exchange.",
											"disabled": true
										},
										{
											"key": "code_challenge_method",
											"value": "plain",
											"description": "Specifies what method was used to encode a code_verifier that will be used during authorization code exchange.",
											"disabled": true
										},
										{
											"key": "credential_id",
											"value": "<string>",
											"description": "(Microsoft only) The ID of a previously created Nylas connector credential record. This is only set for Microsoft admin consent service account flow!",
											"disabled": true
										}
									]
								},
								"description": "The initial OAuth 2.0 authorization request which supports the authorization code flow in addition to optional PKCE for client side only applications. Learn more:\n- [Hosted OAuth with Access token](/docs/developer-guide/v3-authentication/hosted-oauth-accesstoken/)\n- [Hosted OAuth with Access token _and_ PKCE](/docs/developer-guide/v3-authentication/hosted-oauth-accesstoken/#creating-grants-with-authentication-oauth-20-pkce)\n"
							},
							"response": [
								{
									"name": "Redirects to the selected providers authorization page",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/connect/auth?client_id=<string>&provider=<string>&redirect_uri=<string>&response_type=<string>&scope=<string>&prompt=select_provider&state=<string>&login_hint=<string>&access_type=<string>&code_challenge=<string>&code_challenge_method=plain&credential_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connect",
												"auth"
											],
											"query": [
												{
													"key": "client_id",
													"value": "<string>"
												},
												{
													"key": "provider",
													"value": "<string>"
												},
												{
													"key": "redirect_uri",
													"value": "<string>"
												},
												{
													"key": "response_type",
													"value": "<string>"
												},
												{
													"key": "scope",
													"value": "<string>"
												},
												{
													"key": "prompt",
													"value": "select_provider"
												},
												{
													"key": "state",
													"value": "<string>"
												},
												{
													"key": "login_hint",
													"value": "<string>"
												},
												{
													"key": "access_type",
													"value": "<string>"
												},
												{
													"key": "code_challenge",
													"value": "<string>"
												},
												{
													"key": "code_challenge_method",
													"value": "plain"
												},
												{
													"key": "credential_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Found",
									"code": 302,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Location",
											"value": "<url>",
											"description": "Location header Redirects to the selected providers authorization page"
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Hosted OAuth - Authorization Request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/connect/auth?client_id={{application_id}}&provider={{provider}}&redirect_uri={{redirect_uri}}&response_type={{response_type}}&login_hint={{email}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"connect",
										"auth"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{application_id}}",
											"description": "(Required) Nylas application client_id (or application id)"
										},
										{
											"key": "provider",
											"value": "{{provider}}",
											"description": "The Connector provider type that you already had set up with Nylas for this application. If not set, the user is directed to the Hosted Login screen and prompted to select a provider."
										},
										{
											"key": "redirect_uri",
											"value": "{{redirect_uri}}",
											"description": "(Required) Redirect URI (aka callback URI) of the application"
										},
										{
											"key": "response_type",
											"value": "{{response_type}}",
											"description": "(Required) Should be set to `code` for Nylas OAuth2.0 flow, and set to 'adminconsent' for Microsoft admin consent service account flow."
										},
										{
											"key": "scope",
											"value": "<string>",
											"description": "A space-delimited list of scopes that identify the resources that your application could access on the user's behalf. If no scope is given, all of the default connector's scopes are used.",
											"disabled": true
										},
										{
											"key": "prompt",
											"value": "select_provider",
											"description": "Optional prompt for Hosted Login screen. If used can accept multiple values separated by a comma without spaces in between, also order of prompts effects the UI of the Hosted Login screen. If provider is set the user gets redirected to the provider screen directly and the prompt is ignored.",
											"disabled": true
										},
										{
											"key": "state",
											"value": "<string>",
											"description": "Optional state to be returned after authentication",
											"disabled": true
										},
										{
											"key": "login_hint",
											"value": "{{email}}",
											"description": "Prefill the login name (usually email) during authorization flow.  If a Grant for the provided email already exists, a Grant's re-auth will automatically be initiated."
										},
										{
											"key": "access_type",
											"value": "<string>",
											"description": "If the exchange token should return refresh_token too. Not suitable for client side or JavaScript apps.",
											"disabled": true
										},
										{
											"key": "code_challenge",
											"value": "<string>",
											"description": "Specifies a Base64 without padding encoded code_verifier that will be used as a server-side challenge during authorization code exchange.",
											"disabled": true
										},
										{
											"key": "code_challenge_method",
											"value": "plain",
											"description": "Specifies what method was used to encode a code_verifier that will be used during authorization code exchange.",
											"disabled": true
										},
										{
											"key": "credential_id",
											"value": "<string>",
											"description": "(Microsoft only) The ID of a previously created Nylas connector credential record. This is only set for Microsoft admin consent service account flow!",
											"disabled": true
										}
									]
								},
								"description": "The initial OAuth 2.0 authorization request which supports the authorization code flow in addition to optional PKCE for client side only applications. Learn more:\n- [Hosted OAuth with Access token](/docs/developer-guide/v3-authentication/hosted-oauth-accesstoken/)\n- [Hosted OAuth with Access token _and_ PKCE](/docs/developer-guide/v3-authentication/hosted-oauth-accesstoken/#creating-grants-with-authentication-oauth-20-pkce)\n"
							},
							"response": [
								{
									"name": "Redirects to the selected providers authorization page",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/connect/auth?client_id=<string>&provider=<string>&redirect_uri=<string>&response_type=<string>&scope=<string>&prompt=select_provider&state=<string>&login_hint=<string>&access_type=<string>&code_challenge=<string>&code_challenge_method=plain&credential_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connect",
												"auth"
											],
											"query": [
												{
													"key": "client_id",
													"value": "<string>"
												},
												{
													"key": "provider",
													"value": "<string>"
												},
												{
													"key": "redirect_uri",
													"value": "<string>"
												},
												{
													"key": "response_type",
													"value": "<string>"
												},
												{
													"key": "scope",
													"value": "<string>"
												},
												{
													"key": "prompt",
													"value": "select_provider"
												},
												{
													"key": "state",
													"value": "<string>"
												},
												{
													"key": "login_hint",
													"value": "<string>"
												},
												{
													"key": "access_type",
													"value": "<string>"
												},
												{
													"key": "code_challenge",
													"value": "<string>"
												},
												{
													"key": "code_challenge_method",
													"value": "plain"
												},
												{
													"key": "credential_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Found",
									"code": 302,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Location",
											"value": "<url>",
											"description": "Location header Redirects to the selected providers authorization page"
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Hosted OAuth - Token exchange",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{code}}\",\n  \"client_id\": \"{{nylas_client_id}}\",\n  \"client_secret\": \"{{nylas_client_secret}}\",\n  \"redirect_uri\": \"{{redirect_uri}}\",\n  \"grant_type\": \"authorization_code\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/connect/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"connect",
										"token"
									]
								},
								"description": "The standard OAuth token endpoint for use with Hosted authentication. \n- `authorization_code`: Exchange `code` returned from OAuth 2.0 authorization with tokens (`access_token` & `refresh_token`).\n- `refresh_token`: Issue a new `access_token` using `refresh_token`\nLearn More:\n  - [Hosted authentication with OAuth and access token](/docs/developer-guide/v3-authentication/hosted-oauth-accesstoken/)\n  - [Hosted OAuth with access token and PKCE](/docs/developer-guide/v3-authentication/hosted-oauth-accesstoken/#creating-grants-with-authentication-oauth-20-pkce)\n\nNote that if you set `grant_type` to `refresh_token` you must include the `client_secret`. The `client_secret` is optional only if you are using PKCE and it's the initial one-time code exchange step (`grant_type` is set to `authorization_code`).\n"
							},
							"response": [
								{
									"name": "The token exchange was successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\",\n  \"redirect_uri\": \"<url>\",\n  \"grant_type\": \"<string>\",\n  \"code_verifier\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/connect/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connect",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"<string>\",\n  \"expires_in\": 3600,\n  \"id_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"grant_id\": \"<string>\"\n}"
								},
								{
									"name": "The token exchange was unsuccessful. Nylas returns a message with a description, and a link to troubleshooting documentation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\",\n  \"redirect_uri\": \"<url>\",\n  \"grant_type\": \"<string>\",\n  \"code_verifier\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/connect/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connect",
												"token"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<string>\",\n  \"error_code\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Hosted OAuth - Revoke OAuth token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/connect/revoke?token={{bearerToken}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"connect",
										"revoke"
									],
									"query": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"description": "(Required) The token to revoke"
										}
									]
								},
								"description": "Revoke a Nylas OAuth access token. Pass the token to be revoked as a query parameter.\nIf you revoke the Nylas OAuth token, it does not revoke the grant or the associated provider token that Nylas uses internally. This means that an end-user can reauthenticate to get a new access token for the existing grant, so the `grant_id` does not change.\nIf you revoke a Nylas access token, Nylas also revokes all child tokens and the parent `refresh_token` attached to the access token.\n"
							},
							"response": [
								{
									"name": "The token was revoked successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/connect/revoke?token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connect",
												"revoke"
											],
											"query": [
												{
													"key": "token",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								},
								{
									"name": "The token could not be revoked, possibly because it was invalid or already expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/connect/revoke?token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connect",
												"revoke"
											],
											"query": [
												{
													"key": "token",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<string>\",\n  \"error_code\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Token Info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/connect/tokeninfo?id_token={{id_token}}&access_token={{bearerToken}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"connect",
										"tokeninfo"
									],
									"query": [
										{
											"key": "id_token",
											"value": "{{id_token}}",
											"description": "ID token"
										},
										{
											"key": "access_token",
											"value": "{{bearerToken}}",
											"description": "Access token"
										}
									]
								},
								"description": "Get info about a specific token based on the identifier you include. Use _either_ the ID Token or Access Token.</br></br>**Note**: Because Nylas uses the schema outlined in [RFC 9068](https://datatracker.ietf.org/doc/html/rfc9068#name-requesting-a-jwt-access-tok) to ensure that it is compatible with all OAuth libraries in all languages, the format for this endpoint is different from the other OAuth endpoints.\n"
							},
							"response": [
								{
									"name": "Returns Token info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/connect/tokeninfo?id_token=<string>&access_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connect",
												"tokeninfo"
											],
											"query": [
												{
													"key": "id_token",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"iss\": \"<string>\",\n    \"aud\": \"<string>\",\n    \"sub\": \"<string>\",\n    \"email\": \"<string>\",\n    \"iat\": \"<integer>\",\n    \"exp\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/connect/tokeninfo?id_token=<string>&access_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"connect",
												"tokeninfo"
											],
											"query": [
												{
													"key": "id_token",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<string>\",\n  \"error_code\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "grants",
					"item": [
						{
							"name": "{grantId}",
							"item": [
								{
									"name": "Get a grant",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grantId"
											],
											"variable": [
												{
													"key": "grantId",
													"value": "{{grant_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Gets a grant with the provided ID"
									},
									"response": [
										{
											"name": "Returns Grant object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grantId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grantId"
													],
													"variable": [
														{
															"key": "grantId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"provider\": \"<string>\",\n    \"scope\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"created_at\": \"<integer>\",\n    \"grant_status\": \"<string>\",\n    \"email\": \"<string>\",\n    \"user_agent\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"state\": \"<string>\",\n    \"updated_at\": \"<integer>\"\n  }\n}"
										},
										{
											"name": "Not Authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grantId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grantId"
													],
													"variable": [
														{
															"key": "grantId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grantId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grantId"
													],
													"variable": [
														{
															"key": "grantId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update grant",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"settings\": \"<object>\",\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grantId"
											],
											"variable": [
												{
													"key": "grantId",
													"value": "{{grant_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Modify existing grant with partial update. Only fields that are included in the payload will be updated."
									},
									"response": [
										{
											"name": "Returns Grant object",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"settings\": \"<object>\",\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grantId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grantId"
													],
													"variable": [
														{
															"key": "grantId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"provider\": \"<string>\",\n    \"scope\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"created_at\": \"<integer>\",\n    \"grant_status\": \"<string>\",\n    \"email\": \"<string>\",\n    \"user_agent\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"state\": \"<string>\",\n    \"updated_at\": \"<integer>\"\n  }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"settings\": \"<object>\",\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grantId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grantId"
													],
													"variable": [
														{
															"key": "grantId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Bad request\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Not Authenticated",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"settings\": \"<object>\",\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grantId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grantId"
													],
													"variable": [
														{
															"key": "grantId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"settings\": \"<object>\",\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grantId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grantId"
													],
													"variable": [
														{
															"key": "grantId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Delete grant",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grantId"
											],
											"variable": [
												{
													"key": "grantId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete existing grant based on provided ID"
									},
									"response": [
										{
											"name": "Delete Succeed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grantId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grantId"
													],
													"variable": [
														{
															"key": "grantId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Not Authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grantId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grantId"
													],
													"variable": [
														{
															"key": "grantId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grantId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grantId"
													],
													"variable": [
														{
															"key": "grantId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "List grants",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"grants"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Limit the number of grant results",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset grant results",
											"disabled": true
										},
										{
											"key": "sort_by",
											"value": "created_at",
											"description": "Sort entries by field name",
											"disabled": true
										},
										{
											"key": "order_by",
											"value": "desc",
											"description": "Specify ascending or descending order",
											"disabled": true
										},
										{
											"key": "since",
											"value": "<integer>",
											"description": "Scope grants from a specific point in time by `created_at`",
											"disabled": true
										},
										{
											"key": "before",
											"value": "<integer>",
											"description": "Scope grants to a specific point in time by `created_at`",
											"disabled": true
										},
										{
											"key": "email",
											"value": "<string>",
											"description": "Filtering your query based on grant email address (if applicable)",
											"disabled": true
										},
										{
											"key": "grant_status",
											"value": "<string>",
											"description": "Filtering your query based on grant email status (if applicable)",
											"disabled": true
										},
										{
											"key": "ip",
											"value": "<string>",
											"description": "Filtering your query based on grant IP address",
											"disabled": true
										},
										{
											"key": "provider",
											"value": "<string>",
											"description": "OAuth provider",
											"disabled": true
										}
									]
								},
								"description": "Lists grants for Connector"
							},
							"response": [
								{
									"name": "Returns array of Grant objects",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants?limit=10&offset=0&sort_by=created_at&order_by=desc&since=<integer>&before=<integer>&email=<string>&grant_status=<string>&ip=<string>&provider=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort_by",
													"value": "created_at"
												},
												{
													"key": "order_by",
													"value": "desc"
												},
												{
													"key": "since",
													"value": "<integer>"
												},
												{
													"key": "before",
													"value": "<integer>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"key": "grant_status",
													"value": "<string>"
												},
												{
													"key": "ip",
													"value": "<string>"
												},
												{
													"key": "provider",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"provider\": \"<string>\",\n      \"scope\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"created_at\": \"<integer>\",\n      \"grant_status\": \"<string>\",\n      \"email\": \"<string>\",\n      \"user_agent\": \"<string>\",\n      \"ip\": \"<string>\",\n      \"state\": \"<string>\",\n      \"updated_at\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"provider\": \"<string>\",\n      \"scope\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"created_at\": \"<integer>\",\n      \"grant_status\": \"<string>\",\n      \"email\": \"<string>\",\n      \"user_agent\": \"<string>\",\n      \"ip\": \"<string>\",\n      \"state\": \"<string>\",\n      \"updated_at\": \"<integer>\"\n    }\n  ],\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\"\n}"
								},
								{
									"name": "Not Authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants?limit=10&offset=0&sort_by=created_at&order_by=desc&since=<integer>&before=<integer>&email=<string>&grant_status=<string>&ip=<string>&provider=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort_by",
													"value": "created_at"
												},
												{
													"key": "order_by",
													"value": "desc"
												},
												{
													"key": "since",
													"value": "<integer>"
												},
												{
													"key": "before",
													"value": "<integer>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"key": "grant_status",
													"value": "<string>"
												},
												{
													"key": "ip",
													"value": "<string>"
												},
												{
													"key": "provider",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants?limit=10&offset=0&sort_by=created_at&order_by=desc&since=<integer>&before=<integer>&email=<string>&grant_status=<string>&ip=<string>&provider=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort_by",
													"value": "created_at"
												},
												{
													"key": "order_by",
													"value": "desc"
												},
												{
													"key": "since",
													"value": "<integer>"
												},
												{
													"key": "before",
													"value": "<integer>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"key": "grant_status",
													"value": "<string>"
												},
												{
													"key": "ip",
													"value": "<string>"
												},
												{
													"key": "provider",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Get current grant",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/grants/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"grants",
										"me"
									]
								},
								"description": "Gets a grant using current access token"
							},
							"response": [
								{
									"name": "Returns Grant object",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"provider\": \"<string>\",\n    \"scope\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"created_at\": \"<integer>\",\n    \"grant_status\": \"<string>\",\n    \"email\": \"<string>\",\n    \"user_agent\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"state\": \"<string>\",\n    \"updated_at\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "Not Authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												"me"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												"me"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Resource not found\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "webhooks",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get the destinations for an application by webhook ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{webhook_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get the webhook destinations for an application ID by webhook ID"
									},
									"response": [
										{
											"name": "Destinations Returned",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"trigger_types\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"callback_url\": \"<string>\",\n    \"status\": \"<string>\",\n    \"notification_email_addresses\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status_updated_at\": \"<integer>\",\n    \"created_at\": \"<integer>\",\n    \"updated_at\": \"<integer>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Destination not returned",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Update a webhook destination",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"webhook_url\": \"<string>\",\n  \"status\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{webhook_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Update the values in a webhook destination.  <br> <i> **Note**: You only need to specify fields that need to change when you call this endpoint. Empty fields in the request do not overwrite existing fields. </i> <br> <i> **Note**: You should limit how many webhook destinations you have for each trigger type. When Nylas retries a webhook, the retry goes to all of the destinations for that trigger type, and can result in a lot of messages. Some webhook testing tools rate limit or block you if your endpoint generates too much traffic. Nylas blocks ngrok connections in v3 for this reason.</i>\n"
									},
									"response": [
										{
											"name": "Destination Updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"<string>\",\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"callback_url\": \"<string>\",\n  \"status\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"trigger_types\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"callback_url\": \"<string>\",\n    \"status\": \"<string>\",\n    \"notification_email_addresses\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status_updated_at\": \"<integer>\",\n    \"created_at\": \"<integer>\",\n    \"updated_at\": \"<integer>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Destination not updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"<string>\",\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"callback_url\": \"<string>\",\n  \"status\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete a webhook destination",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete a webhook destination record."
									},
									"response": [
										{
											"name": "Destination Deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"status\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Destination not deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create a webhook destination",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"webhook_url\": \"<string>\",\n  \"description\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"webhooks"
									]
								},
								"description": "Create a new Webhook Destination with a callback URL and a set of trigger types to send to the URL.  <br> <i> **Note**: You should limit how many webhook destinations you have for each trigger type. When Nylas retries a webhook, the retry goes to all of the destinations for that trigger type, and can result in a lot of messages. Some webhook testing tools rate limit or block you if your endpoint generates too much traffic. Nylas blocks ngrok connections in v3 for this reason </i>\n"
							},
							"response": [
								{
									"name": "Webhook Destination Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"callback_url\": \"<string>\",\n  \"description\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"webhooks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"trigger_types\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"callback_url\": \"<string>\",\n    \"webhook_secret\": \"<string>\",\n    \"status\": \"<string>\",\n    \"notification_email_addresses\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"request_id\": \"<string>\"\n}"
								},
								{
									"name": "Destination not created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"callback_url\": \"<string>\",\n  \"description\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"webhooks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get destinations for an application",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"webhooks"
									]
								},
								"description": "Get a list of all webhook destinations for an application id."
							},
							"response": [
								{
									"name": "Destinations Returned",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"webhooks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"trigger_types\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"callback_url\": \"<string>\",\n      \"status\": \"<string>\",\n      \"notification_email_addresses\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"trigger_types\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"callback_url\": \"<string>\",\n      \"status\": \"<string>\",\n      \"notification_email_addresses\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"request_id\": \"<string>\"\n}"
								},
								{
									"name": "Destination not returned",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"webhooks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Rotate a webhook secret",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/webhooks/rotate-secret/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"webhooks",
										"rotate-secret",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{webhook_id}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Update the webhook secret value for a destination. The previous value will immediately stop being used and the new value will take over."
							},
							"response": [
								{
									"name": "Webhook Secret Updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/webhooks/rotate-secret/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"webhooks",
												"rotate-secret",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"trigger_types\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"callback_url\": \"<string>\",\n    \"webhook_secret\": \"<string>\",\n    \"status\": \"<string>\",\n    \"notification_email_addresses\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"request_id\": \"<string>\"\n}"
								},
								{
									"name": "Destination not deleted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/webhooks/rotate-secret/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"webhooks",
												"rotate-secret",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get mock webhook payload",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"trigger_type\": \"<string>\",\n  \"webhook_url\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/webhooks/mock-payload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"webhooks",
										"mock-payload"
									]
								},
								"description": "The webhook payload that Nylas sends for the corresponding trigger type"
							},
							"response": [
								{
									"name": "Webhook Payload Returned",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"trigger_type\": \"<string>\",\n  \"callback_url\": 29252081.658060238\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/webhooks/mock-payload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"webhooks",
												"mock-payload"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"data\": \"<object>\"\n  },\n  \"request_id\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Send test event",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"trigger_type\": \"<string>\",\n  \"webhook_url\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/webhooks/send-test-event",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"webhooks",
										"send-test-event"
									]
								},
								"description": "The mock webhook feature sends sample events so you can test your webhook destinations or receivers. Webhooks with mock payloads are sent to the callback URL you provide.\nThe secret used will be \"mock-webhook-secret\""
							},
							"response": [
								{
									"name": "Test event sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"trigger_type\": \"<string>\",\n  \"callback_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/webhooks/send-test-event",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"webhooks",
												"send-test-event"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": \"<string>\",\n  \"request_id\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "channels/pubsub",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a specific PubSub channel by id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/channels/pubsub/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"channels",
												"pubsub",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the PubSub channel to retrieve."
												}
											]
										},
										"description": "Get a specific PubSub channel from a specific Nylas application by id."
									},
									"response": [
										{
											"name": "Get specific PubSub channel information",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/channels/pubsub/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"channels",
														"pubsub",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The ID of the PubSub channel to retrieve."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"trigger_types\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"topic\": \"<string>\",\n    \"status\": \"<string>\",\n    \"notification_email_addresses\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status_updated_at\": \"<integer>\",\n    \"created_at\": \"<integer>\",\n    \"updated_at\": \"<integer>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Unable to get PubSub channel information",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/channels/pubsub/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"channels",
														"pubsub",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The ID of the PubSub channel to retrieve."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Update a specific PubSub channel",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"topic\": \"<string>\",\n  \"status\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/channels/pubsub/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"channels",
												"pubsub",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the PubSub channel to retrieve."
												}
											]
										},
										"description": "Update a specific PubSub channel from a specific Nylas application."
									},
									"response": [
										{
											"name": "PubSub channel updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"<string>\",\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"topic\": \"<string>\",\n  \"status\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/channels/pubsub/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"channels",
														"pubsub",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The ID of the PubSub channel to retrieve."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"trigger_types\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"topic\": \"<string>\",\n    \"status\": \"<string>\",\n    \"notification_email_addresses\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status_updated_at\": \"<integer>\",\n    \"created_at\": \"<integer>\",\n    \"updated_at\": \"<integer>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "PubSub channel not updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"<string>\",\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"topic\": \"<string>\",\n  \"status\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/channels/pubsub/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"channels",
														"pubsub",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The ID of the PubSub channel to retrieve."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete a specific PubSub channel",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/channels/pubsub/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"channels",
												"pubsub",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the PubSub channel to retrieve."
												}
											]
										},
										"description": "Delete a specific PubSub channel from a specific Nylas application."
									},
									"response": [
										{
											"name": "Destination Deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/channels/pubsub/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"channels",
														"pubsub",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The ID of the PubSub channel to retrieve."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"status\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Notification channel not deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/channels/pubsub/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"channels",
														"pubsub",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The ID of the PubSub channel to retrieve."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create a PubSub channel",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/channels/pubsub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"channels",
										"pubsub"
									]
								},
								"description": "Create a PubSub channel in the specified application.\n"
							},
							"response": [
								{
									"name": "PubSub channel created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/channels/pubsub",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"channels",
												"pubsub"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"trigger_types\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"topic\": \"<string>\",\n    \"status\": \"<string>\",\n    \"notification_email_addresses\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"request_id\": \"<string>\"\n}"
								},
								{
									"name": "Unable to create PubSub channel",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"trigger_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"notification_email_addresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/channels/pubsub",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"channels",
												"pubsub"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get PubSub channels for an application",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/channels/pubsub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"channels",
										"pubsub"
									]
								},
								"description": "Get the PubSub channels for an application.\n"
							},
							"response": [
								{
									"name": "Get PubSub channel information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/channels/pubsub",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"channels",
												"pubsub"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"trigger_types\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"topic\": \"<string>\",\n      \"status\": \"<string>\",\n      \"notification_email_addresses\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"trigger_types\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"topic\": \"<string>\",\n      \"status\": \"<string>\",\n      \"notification_email_addresses\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"request_id\": \"<string>\"\n}"
								},
								{
									"name": "Unable to get PubSub channel information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/channels/pubsub",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"channels",
												"pubsub"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"request_id\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Detect provider",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v3/providers/detect?email={{email}}&all_provider_types=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"providers",
								"detect"
							],
							"query": [
								{
									"key": "email",
									"value": "{{email}}",
									"description": "(Required) Email for detection"
								},
								{
									"key": "all_provider_types",
									"value": "false",
									"description": "Search by all providers regardless of if they have an existing connector"
								}
							]
						},
						"description": "Returns detected provider if it is found"
					},
					"response": [
						{
							"name": "Returns the autodetected provider",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/providers/detect?email=<string>&all_provider_types=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"providers",
										"detect"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "all_provider_types",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": {\n    \"email_address\": \"<string>\",\n    \"detected\": \"<boolean>\",\n    \"provider\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Not Authenticated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/providers/detect?email=<string>&all_provider_types=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"providers",
										"detect"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "all_provider_types",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"Authentication error\",\n    \"provider_error\": \"<object>\"\n  }\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.us.nylas.com",
			"type": "string"
		}
	]
}
