{
	"info": {
		"name": "v3 Nylas Scheduler APIs",
		"description": "Scheduler v3 is a [public beta release](https:///docs/support/product-lifecycle/#beta-release). It is generally stable, but some features might be added or changed before it is generally available.  \n  \nThis API reference documentation covers the **Nylas Scheduler API**. See the see the [<b>Administration API documentation</b>](https:///docs/api/v3/admin/) for information about working with Nylas applications, authentication, connectors, and webhook subscriptions.  \n  \n\nNylas API is designed using the [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer) ideology to provide simple and predictable URIs to access and modify objects. Requests support [standard HTTP methods](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html) like `GET`, `PUT`, `POST`, and `DELETE`, and [standard status codes](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html). Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_collection_link": "https://www.postman.com/trynylas/nylas-api/collection/fjc2ypg/v3-nylas-scheduler-apis"
	},
	"item": [
		{
			"name": "v3",
			"item": [
				{
					"name": "grants/{grant_id}/scheduling/configurations",
					"item": [
						{
							"name": "{configuration_id}",
							"item": [
								{
									"name": "Return a Configuration object",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations",
												":configuration_id"
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "{{grant_id}}",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												},
												{
													"key": "configuration_id",
													"value": "{{configuration_id}}",
													"description": "(Required) The ID of the specific Configuration object you want to work with."
												}
											]
										},
										"description": "Returns a specific Configuration object."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"participants\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"is_organizer\": false,\n      \"availability\": {\n        \"calendar_ids\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"open_hours\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"booking\": {\n        \"calendar_id\": \"<string>\"\n      },\n      \"timezone\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"is_organizer\": false,\n      \"availability\": {\n        \"calendar_ids\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"open_hours\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"booking\": {\n        \"calendar_id\": \"<string>\"\n      },\n      \"timezone\": \"<string>\"\n    }\n  ],\n  \"availability\": {\n    \"duration_minutes\": \"<integer>\",\n    \"interval_minutes\": \"<integer>\",\n    \"round_to\": 15,\n    \"availability_rules\": {\n      \"availability_method\": \"collective\",\n      \"buffer\": {\n        \"before\": 0,\n        \"after\": 0\n      },\n      \"default_open_hours\": [\n        {\n          \"days\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"start\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"end\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"exdates\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        {\n          \"days\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"start\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"end\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"exdates\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      ]\n    }\n  },\n  \"event_booking\": {\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"booking_type\": \"booking\",\n    \"conferencing\": {\n      \"autocreate\": \"<object>\"\n    },\n    \"disable_emails\": \"<boolean>\"\n  },\n  \"ID\": \"<string>\",\n  \"requires_session_auth\": true,\n  \"scheduler\": {\n    \"additional_fields\": {\n      \"pariaturf\": {\n        \"label\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": \"<boolean>\",\n        \"pattern\": \"<string>\",\n        \"order\": \"<integer>\",\n        \"options\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"available_days_in_future\": 30,\n    \"min_booking_notice\": 60,\n    \"min_cancellation_notice\": 0,\n    \"cancellation_policy\": \"<string>\",\n    \"rescheduling_url\": \"<string>\",\n    \"cancellation_url\": \"<string>\",\n    \"organizer_confirmation_url\": \"<string>\",\n    \"confirmation_redirect_url\": \"<string>\",\n    \"hide_rescheduling_options\": false,\n    \"hide_cancellation_options\": false,\n    \"hide_additional_guests\": false,\n    \"email_template\": {\n      \"logo\": \"<string>\",\n      \"booking_confirmed\": {\n        \"title\": \"<string>\",\n        \"body\": \"<string>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Rate Limit",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Provider Failure",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Gateway Timeout",
											"code": 504,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update a Configuration object",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"participants\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"is_organizer\": false,\n      \"availability\": {\n        \"calendar_ids\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"open_hours\": [\n          {\n            \"days\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"start\": \"<string>\",\n            \"end\": \"<string>\",\n            \"exdates\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"days\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"start\": \"<string>\",\n            \"end\": \"<string>\",\n            \"exdates\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"booking\": {\n        \"calendar_id\": \"<string>\"\n      },\n      \"timezone\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"is_organizer\": false,\n      \"availability\": {\n        \"calendar_ids\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"open_hours\": [\n          {\n            \"days\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"start\": \"<string>\",\n            \"end\": \"<string>\",\n            \"exdates\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"days\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"start\": \"<string>\",\n            \"end\": \"<string>\",\n            \"exdates\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"booking\": {\n        \"calendar_id\": \"<string>\"\n      },\n      \"timezone\": \"<string>\"\n    }\n  ],\n  \"availability\": {\n    \"duration_minutes\": \"<integer>\",\n    \"interval_minutes\": \"<integer>\",\n    \"round_to\": 15,\n    \"availability_rules\": {\n      \"availability_method\": \"collective\",\n      \"buffer\": {\n        \"before\": 0,\n        \"after\": 0\n      },\n      \"default_open_hours\": [\n        {\n          \"days\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"start\": \"<string>\",\n          \"end\": \"<string>\",\n          \"exdates\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"days\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"start\": \"<string>\",\n          \"end\": \"<string>\",\n          \"exdates\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  },\n  \"event_booking\": {\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"booking_type\": \"booking\",\n    \"conferencing\": {\n      \"autocreate\": \"<object>\"\n    },\n    \"disable_emails\": \"<boolean>\"\n  },\n  \"requires_session_auth\": true,\n  \"scheduler\": {\n    \"additional_fields\": {\n      \"consectetur89\": {\n        \"label\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": \"<boolean>\",\n        \"pattern\": \"<string>\",\n        \"order\": \"<integer>\",\n        \"options\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"aliqua__9b\": {\n        \"label\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": \"<boolean>\",\n        \"pattern\": \"<string>\",\n        \"order\": \"<integer>\",\n        \"options\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"available_days_in_future\": 30,\n    \"min_booking_notice\": 60,\n    \"min_cancellation_notice\": 0,\n    \"cancellation_policy\": \"<string>\",\n    \"rescheduling_url\": \"<string>\",\n    \"cancellation_url\": \"<string>\",\n    \"organizer_confirmation_url\": \"<string>\",\n    \"confirmation_redirect_url\": \"<string>\",\n    \"hide_rescheduling_options\": false,\n    \"hide_cancellation_options\": false,\n    \"hide_additional_guests\": false,\n    \"email_template\": {\n      \"logo\": \"<string>\",\n      \"booking_confirmed\": {\n        \"title\": \"<string>\",\n        \"body\": \"<string>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations",
												":configuration_id"
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "{{grant_id}}",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												},
												{
													"key": "configuration_id",
													"value": "{{configuration_id}}",
													"description": "(Required) The ID of the specific Configuration object you want to work with."
												}
											]
										},
										"description": "Updates a specific Configuration object."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"participants\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"is_organizer\": false,\n      \"availability\": {\n        \"calendar_ids\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"open_hours\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"booking\": {\n        \"calendar_id\": \"<string>\"\n      },\n      \"timezone\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"is_organizer\": false,\n      \"availability\": {\n        \"calendar_ids\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"open_hours\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"booking\": {\n        \"calendar_id\": \"<string>\"\n      },\n      \"timezone\": \"<string>\"\n    }\n  ],\n  \"availability\": {\n    \"duration_minutes\": \"<integer>\",\n    \"interval_minutes\": \"<integer>\",\n    \"round_to\": 15,\n    \"availability_rules\": {\n      \"availability_method\": \"collective\",\n      \"buffer\": {\n        \"before\": 0,\n        \"after\": 0\n      },\n      \"default_open_hours\": [\n        {\n          \"days\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"start\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"end\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"exdates\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        {\n          \"days\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"start\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"end\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"exdates\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      ]\n    }\n  },\n  \"event_booking\": {\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"booking_type\": \"booking\",\n    \"conferencing\": {\n      \"autocreate\": \"<object>\"\n    },\n    \"disable_emails\": \"<boolean>\"\n  },\n  \"ID\": \"<string>\",\n  \"requires_session_auth\": true,\n  \"scheduler\": {\n    \"additional_fields\": {\n      \"pariaturf\": {\n        \"label\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": \"<boolean>\",\n        \"pattern\": \"<string>\",\n        \"order\": \"<integer>\",\n        \"options\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"available_days_in_future\": 30,\n    \"min_booking_notice\": 60,\n    \"min_cancellation_notice\": 0,\n    \"cancellation_policy\": \"<string>\",\n    \"rescheduling_url\": \"<string>\",\n    \"cancellation_url\": \"<string>\",\n    \"organizer_confirmation_url\": \"<string>\",\n    \"confirmation_redirect_url\": \"<string>\",\n    \"hide_rescheduling_options\": false,\n    \"hide_cancellation_options\": false,\n    \"hide_additional_guests\": false,\n    \"email_template\": {\n      \"logo\": \"<string>\",\n      \"booking_confirmed\": {\n        \"title\": \"<string>\",\n        \"body\": \"<string>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Rate Limit",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Provider Failure",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Gateway Timeout",
											"code": 504,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Delete a Configuration object",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations",
												":configuration_id"
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "{{grant_id}}",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												},
												{
													"key": "configuration_id",
													"value": "{{configuration_id}}",
													"description": "(Required) The ID of the specific Configuration object you want to work with."
												}
											]
										},
										"description": "Deletes a specific Configuration object. You cannot delete a Configuration object that has active sessions."
									},
									"response": [
										{
											"name": "Delete Succeed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Rate Limit",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Provider Failure",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations/:configuration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"grants",
														":grant_id",
														"scheduling",
														"configurations",
														":configuration_id"
													],
													"variable": [
														{
															"key": "grant_id",
															"value": "<string>",
															"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
														},
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "(Required) The ID of the specific Configuration object you want to work with."
														}
													]
												}
											},
											"status": "Gateway Timeout",
											"code": 504,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create a Configuration object",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"participants\": [\n    {\n      \"email\": \"{{email}}\",\n      \"name\": \"{{name}}\",\n      \"is_organizer\": true,\n      \"availability\": {\n        \"calendar_ids\": [\"primary\"],\n        \"open_hours\": [\n          {\n            \"days\": [0],\n            \"start\": \"0:00\",\n            \"end\": \"16:00\",\n            \"exdates\": []\n          }\n        ]\n      },\n      \"booking\": {\n        \"calendar_id\": \"primary\"\n      }\n    //   \"timezone\": \"<string>\"\n    }\n  ],\n  \"availability\": {\n    \"duration_minutes\": 30,\n    \"interval_minutes\": 5,\n    \"round_to\": 15,\n    \"availability_rules\": {\n      \"availability_method\": \"collective\",\n      \"buffer\": {\n        \"before\": 0,\n        \"after\": 0\n      },\n      \"default_open_hours\": [\n          {\n            \"days\": [0],\n            \"start\": \"0:00\",\n            \"end\": \"16:00\",\n            \"exdates\": []\n          }\n       ]\n    }\n  },\n  \"event_booking\": {\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"booking_type\": \"booking\"\n    // \"conferencing\": {\n    //   \"autocreate\": \"<object>\"\n    // },\n    // \"disable_emails\": \"<boolean>\"\n  },\n  \"requires_session_auth\": true,\n  \"scheduler\": {\n    \"additional_fields\": {\n    //   \"veniama42\": {\n    //     \"label\": \"<string>\",\n    //     \"type\": \"<string>\",\n    //     \"required\": \"<boolean>\",\n    //     \"pattern\": \"<string>\",\n    //     \"order\": \"<integer>\",\n    //     \"options\": [\n    //       \"<string>\",\n    //       \"<string>\"\n    //     ]\n    //   },\n    //   \"nond55\": {\n    //     \"label\": \"<string>\",\n    //     \"type\": \"<string>\",\n    //     \"required\": \"<boolean>\",\n    //     \"pattern\": \"<string>\",\n    //     \"order\": \"<integer>\",\n    //     \"options\": [\n    //       \"<string>\",\n    //       \"<string>\"\n    //     ]\n    //   }\n    },\n    \"available_days_in_future\": 30,\n    \"min_booking_notice\": 60,\n    \"min_cancellation_notice\": 0,\n    \"cancellation_policy\": \"<string>\",\n    // \"rescheduling_url\": \"<string>\",\n    // \"cancellation_url\": \"<string>\",\n    // \"organizer_confirmation_url\": \"<string>\",\n    // \"confirmation_redirect_url\": \"<string>\",\n    \"hide_rescheduling_options\": false,\n    \"hide_cancellation_options\": false,\n    \"hide_additional_guests\": false,\n    \"email_template\": {\n      \"logo\": \"<string>\",\n      \"booking_confirmed\": {\n        \"title\": \"<string>\",\n        \"body\": \"<string>\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"grants",
										":grant_id",
										"scheduling",
										"configurations"
									],
									"variable": [
										{
											"key": "grant_id",
											"value": "{{grant_id}}",
											"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
										}
									]
								},
								"description": "Creates a Configuration object that you use to define the settings and preferences for a scheduling session."
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations"
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "<string>",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"participants\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"is_organizer\": false,\n      \"availability\": {\n        \"calendar_ids\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"open_hours\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"booking\": {\n        \"calendar_id\": \"<string>\"\n      },\n      \"timezone\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"is_organizer\": false,\n      \"availability\": {\n        \"calendar_ids\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"open_hours\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"booking\": {\n        \"calendar_id\": \"<string>\"\n      },\n      \"timezone\": \"<string>\"\n    }\n  ],\n  \"availability\": {\n    \"duration_minutes\": \"<integer>\",\n    \"interval_minutes\": \"<integer>\",\n    \"round_to\": 15,\n    \"availability_rules\": {\n      \"availability_method\": \"collective\",\n      \"buffer\": {\n        \"before\": 0,\n        \"after\": 0\n      },\n      \"default_open_hours\": [\n        {\n          \"days\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"start\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"end\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"exdates\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        {\n          \"days\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"start\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"end\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"exdates\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      ]\n    }\n  },\n  \"event_booking\": {\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"booking_type\": \"booking\",\n    \"conferencing\": {\n      \"autocreate\": \"<object>\"\n    },\n    \"disable_emails\": \"<boolean>\"\n  },\n  \"ID\": \"<string>\",\n  \"requires_session_auth\": true,\n  \"scheduler\": {\n    \"additional_fields\": {\n      \"pariaturf\": {\n        \"label\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": \"<boolean>\",\n        \"pattern\": \"<string>\",\n        \"order\": \"<integer>\",\n        \"options\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"available_days_in_future\": 30,\n    \"min_booking_notice\": 60,\n    \"min_cancellation_notice\": 0,\n    \"cancellation_policy\": \"<string>\",\n    \"rescheduling_url\": \"<string>\",\n    \"cancellation_url\": \"<string>\",\n    \"organizer_confirmation_url\": \"<string>\",\n    \"confirmation_redirect_url\": \"<string>\",\n    \"hide_rescheduling_options\": false,\n    \"hide_cancellation_options\": false,\n    \"hide_additional_guests\": false,\n    \"email_template\": {\n      \"logo\": \"<string>\",\n      \"booking_confirmed\": {\n        \"title\": \"<string>\",\n        \"body\": \"<string>\"\n      }\n    }\n  }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations"
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "<string>",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations"
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "<string>",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Rate Limit",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations"
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "<string>",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Provider Failure",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations"
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "<string>",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												}
											]
										}
									},
									"status": "Gateway Timeout",
									"code": 504,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Return all Configuration objects",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations?limit=50&page_token={{page_token}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"grants",
										":grant_id",
										"scheduling",
										"configurations"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "The maximum number of objects to return. See [pagination](/docs/api/v3/ecc/#overview--pagination) for more information."
										},
										{
											"key": "page_token",
											"value": "{{page_token}}",
											"description": "An identifier that specifies which page of data to return. You can get this value from the `next_cursor` response field. See [Pagination](/docs/api/v3/ecc/#overview--pagination) for more information."
										}
									],
									"variable": [
										{
											"key": "grant_id",
											"value": "{{grant_id}}",
											"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
										}
									]
								},
								"description": "Returns all Configuration objects."
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations?limit=50&page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "page_token",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "<string>",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations?limit=50&page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "page_token",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "<string>",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations?limit=50&page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "page_token",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "<string>",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Rate Limit",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations?limit=50&page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "page_token",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "<string>",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Provider Failure",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/grants/:grant_id/scheduling/configurations?limit=50&page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"grants",
												":grant_id",
												"scheduling",
												"configurations"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "page_token",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "grant_id",
													"value": "<string>",
													"description": "(Required) ID of the grant to access. Use `/me/` to refer to the grant associated with an access token."
												}
											]
										}
									},
									"status": "Gateway Timeout",
									"code": 504,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "scheduling",
					"item": [
						{
							"name": "sessions",
							"item": [
								{
									"name": "Create a session",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"configuration_id\": \"<string>\",\n  \"time_to_live\": 5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/scheduling/sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"scheduling",
												"sessions"
											]
										},
										"description": "Creates a new short-lived session that you can pass to the Scheduling Component to enforce end-user authentication. Your request must include the ID of an existing Configuration object."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"sessions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": \"<object>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"sessions"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"sessions"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Rate Limit",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"sessions"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Provider Failure",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"sessions"
													]
												}
											},
											"status": "Gateway Timeout",
											"code": 504,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Delete a session",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/scheduling/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"scheduling",
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id",
													"value": "{{session_id}}",
													"description": "(Required) The ID of the session to modify."
												}
											]
										},
										"description": "Deletes a specific session."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/sessions/:session_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"sessions",
														":session_id"
													],
													"variable": [
														{
															"key": "session_id",
															"value": "<string>",
															"description": "(Required) The ID of the session to modify."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/sessions/:session_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"sessions",
														":session_id"
													],
													"variable": [
														{
															"key": "session_id",
															"value": "<string>",
															"description": "(Required) The ID of the session to modify."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/sessions/:session_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"sessions",
														":session_id"
													],
													"variable": [
														{
															"key": "session_id",
															"value": "<string>",
															"description": "(Required) The ID of the session to modify."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Rate Limit",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/sessions/:session_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"sessions",
														":session_id"
													],
													"variable": [
														{
															"key": "session_id",
															"value": "<string>",
															"description": "(Required) The ID of the session to modify."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Provider Failure",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/sessions/:session_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"sessions",
														":session_id"
													],
													"variable": [
														{
															"key": "session_id",
															"value": "<string>",
															"description": "(Required) The ID of the session to modify."
														}
													]
												}
											},
											"status": "Gateway Timeout",
											"code": 504,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "bookings",
							"item": [
								{
									"name": "{booking_id}",
									"item": [
										{
											"name": "Return a Booking object",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id={{configuration_id}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"bookings",
														":booking_id"
													],
													"query": [
														{
															"key": "configuration_id",
															"value": "{{configuration_id}}",
															"description": "The ID of the Configuration object whose settings are used for the booking. Required only if you're not using session authentication (`requires_session_auth` is set to `false`)."
														}
													],
													"variable": [
														{
															"key": "booking_id",
															"value": "{{booking_id}}",
															"description": "(Required) ID of the booking object to access."
														}
													]
												},
												"description": "Returns a specific booking object.</br></br>   Nylas validates the provided session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": \"<object>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Rate Limit",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Provider Failure",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Reschedule a booking",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"start_time\": \"<string>\",\n  \"end_time\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"bookings",
														":booking_id"
													],
													"query": [
														{
															"key": "configuration_id",
															"value": "<string>",
															"description": "The ID of the Configuration object whose settings are used for the booking. Required only if you're not using session authentication (`requires_session_auth` is set to `false`)."
														}
													],
													"variable": [
														{
															"key": "booking_id",
															"value": "{{booking_id}}",
															"description": "(Required) ID of the booking object to access."
														}
													]
												},
												"description": "Reschedules a specific booking. Nylas also updates the event linked to the booking on the provider.</br></br>   Nylas validates the provided session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Rate Limit",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Provider Failure",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Confirm a booking",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"salt\": \"<string>\",\n  \"status\": \"<string>\",\n  \"cancellation_reason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id={{configuration_id}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"bookings",
														":booking_id"
													],
													"query": [
														{
															"key": "configuration_id",
															"value": "{{configuration_id}}",
															"description": "The ID of the Configuration object whose settings are used for the booking. Required only if you're not using session authentication (`requires_session_auth` is set to `false`)."
														}
													],
													"variable": [
														{
															"key": "booking_id",
															"value": "{{booking_id}}",
															"description": "(Required) ID of the booking object to access."
														}
													]
												},
												"description": "Confirms or cancels a pending booking. Nylas also updates the event linked to the booking on the provider.</br></br>   Nylas validates the provided session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"booking_id\": \"<string>\",\n  \"event_id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"organizer\": {\n    \"email\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"status\": \"<string>\",\n  \"description\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Rate Limit",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Provider Failure",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete a booking",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cancellation_reason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id={{configuration_id}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"bookings",
														":booking_id"
													],
													"query": [
														{
															"key": "configuration_id",
															"value": "{{configuration_id}}",
															"description": "The ID of the Configuration object whose settings are used for the booking. Required only if you're not using session authentication (`requires_session_auth` is set to `false`)."
														}
													],
													"variable": [
														{
															"key": "booking_id",
															"value": "{{booking_id}}",
															"description": "(Required) ID of the booking object to access."
														}
													]
												},
												"description": "Deletes an specific booking. Nylas also cancels the event linked to the booking on the provider.</br></br>   Nylas validates the provided session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter."
											},
											"response": [
												{
													"name": "Delete Succeed",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cancellation_reason\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cancellation_reason\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cancellation_reason\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cancellation_reason\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Rate Limit",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cancellation_reason\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Provider Failure",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cancellation_reason\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/scheduling/bookings/:booking_id?configuration_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"scheduling",
																"bookings",
																":booking_id"
															],
															"query": [
																{
																	"key": "configuration_id",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "booking_id",
																	"value": "<string>",
																	"description": "(Required) ID of the booking object to access."
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Book an event",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start_time\": \"<string>\",\n  \"end_time\": \"<string>\",\n  \"guest\": {\n    \"email\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"participants\": [\n    {\n      \"email\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\"\n    }\n  ],\n  \"timezone\": \"<string>\",\n  \"additional_guests\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"additional_fields\": {\n    \"pariaturf7\": \"<string>\",\n    \"cillum1bc\": \"<string>\",\n    \"sit01\": \"<string>\",\n    \"amet__39\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/scheduling/bookings?configuration_id={{configuration_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"scheduling",
												"bookings"
											],
											"query": [
												{
													"key": "timezone",
													"value": "<string>",
													"description": "The timezone to use for the booking. If not provided, Nylas uses the timezone from the Configuration object.",
													"disabled": true
												},
												{
													"key": "configuration_id",
													"value": "{{configuration_id}}",
													"description": "The ID of the Configuration object whose settings are used for the booking. If you're not using session authentication (`requires_session_auth` is set to `false`), this field is required."
												}
											]
										},
										"description": "Books an event with the participants listed in the session's Configuration object, using the details from the Configuration object. The `start_time` and `end_time` must correspond to a valid time slot returned by the [Scheduling  Availability endpoint](/docs/api/v3/scheduler/#get-/v3/scheduling/availability) using the same configuration.</br></br>\n Nylas validates the session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/bookings?timezone=<string>&configuration_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"bookings"
													],
													"query": [
														{
															"key": "timezone",
															"value": "<string>"
														},
														{
															"key": "configuration_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": \"<object>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/bookings?timezone=<string>&configuration_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"bookings"
													],
													"query": [
														{
															"key": "timezone",
															"value": "<string>"
														},
														{
															"key": "configuration_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/bookings?timezone=<string>&configuration_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"bookings"
													],
													"query": [
														{
															"key": "timezone",
															"value": "<string>"
														},
														{
															"key": "configuration_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/bookings?timezone=<string>&configuration_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"bookings"
													],
													"query": [
														{
															"key": "timezone",
															"value": "<string>"
														},
														{
															"key": "configuration_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Rate Limit",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/bookings?timezone=<string>&configuration_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"bookings"
													],
													"query": [
														{
															"key": "timezone",
															"value": "<string>"
														},
														{
															"key": "configuration_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Provider Failure",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/scheduling/bookings?timezone=<string>&configuration_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"scheduling",
														"bookings"
													],
													"query": [
														{
															"key": "timezone",
															"value": "<string>"
														},
														{
															"key": "configuration_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Gateway Timeout",
											"code": 504,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Availability",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/scheduling/availability?start_time=1722291193&end_time=1724969593&configuration_id={{configuration_id}}&booking_id={{booking_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"scheduling",
										"availability"
									],
									"query": [
										{
											"key": "start_time",
											"value": "1722291193",
											"description": "(Required) A Unix timestamp for the start time to check availability for."
										},
										{
											"key": "end_time",
											"value": "1724969593",
											"description": "(Required) A Unix timestamp for the end time to check availability for."
										},
										{
											"key": "configuration_id",
											"value": "{{configuration_id}}",
											"description": "The ID of the Configuration object whose settings are used for calculating availability. Required only if you're not using session authentication (`requires_session_auth` is set to `false`)."
										},
										{
											"key": "booking_id",
											"value": "{{booking_id}}",
											"description": "This is the ID of the booking to reschedule, if you are checking availability to reschedule a round-robin booking. Required only if `availability_method` is `max-fairness` or `max-availability`. See [Retrieving booking IDs](/docs/v3/scheduler/retrieving-booking-ids/) for more information."
										}
									]
								},
								"description": "Gets available time slots within the specified time range, using the rules defined in the Configuration object.</br></br>   Nylas validates the provided session ID and uses it to retrieve the related Configuration object. If you created a [public configuration](/docs/api/v3/scheduler/#tag--Configurations), you don't need to include the `Authorization` request header with a session ID, but you must pass the Configuration object ID as a query parameter."
							},
							"response": [
								{
									"name": "Availability Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/scheduling/availability?start_time=<string>&end_time=<string>&configuration_id=<string>&booking_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"scheduling",
												"availability"
											],
											"query": [
												{
													"key": "start_time",
													"value": "<string>"
												},
												{
													"key": "end_time",
													"value": "<string>"
												},
												{
													"key": "configuration_id",
													"value": "<string>"
												},
												{
													"key": "booking_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"data\": \"<object>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/scheduling/availability?start_time=<string>&end_time=<string>&configuration_id=<string>&booking_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"scheduling",
												"availability"
											],
											"query": [
												{
													"key": "start_time",
													"value": "<string>"
												},
												{
													"key": "end_time",
													"value": "<string>"
												},
												{
													"key": "configuration_id",
													"value": "<string>"
												},
												{
													"key": "booking_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/scheduling/availability?start_time=<string>&end_time=<string>&configuration_id=<string>&booking_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"scheduling",
												"availability"
											],
											"query": [
												{
													"key": "start_time",
													"value": "<string>"
												},
												{
													"key": "end_time",
													"value": "<string>"
												},
												{
													"key": "configuration_id",
													"value": "<string>"
												},
												{
													"key": "booking_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"provider_error\": \"<object>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/scheduling/availability?start_time=<string>&end_time=<string>&configuration_id=<string>&booking_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"scheduling",
												"availability"
											],
											"query": [
												{
													"key": "start_time",
													"value": "<string>"
												},
												{
													"key": "end_time",
													"value": "<string>"
												},
												{
													"key": "configuration_id",
													"value": "<string>"
												},
												{
													"key": "booking_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Rate Limit",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/scheduling/availability?start_time=<string>&end_time=<string>&configuration_id=<string>&booking_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"scheduling",
												"availability"
											],
											"query": [
												{
													"key": "start_time",
													"value": "<string>"
												},
												{
													"key": "end_time",
													"value": "<string>"
												},
												{
													"key": "configuration_id",
													"value": "<string>"
												},
												{
													"key": "booking_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Provider Failure",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/scheduling/availability?start_time=<string>&end_time=<string>&configuration_id=<string>&booking_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"scheduling",
												"availability"
											],
											"query": [
												{
													"key": "start_time",
													"value": "<string>"
												},
												{
													"key": "end_time",
													"value": "<string>"
												},
												{
													"key": "configuration_id",
													"value": "<string>"
												},
												{
													"key": "booking_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Gateway Timeout",
									"code": 504,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"request_id\": \"<string>\",\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.us.nylas.com",
			"type": "string"
		}
	]
}
