<?php
/**
 * V3SchedulingBookingsBookingIdApiTest
 * PHP version 8.1
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * v3 Nylas Scheduler APIs
 *
 * Scheduler v3 is a [public beta release](https:///docs/support/product-lifecycle/#beta-release). It is generally stable, but some features might be added or changed before it is generally available.   This API reference documentation covers the **Nylas Scheduler API**. See the see the [<b>Administration API documentation</b>](https:///docs/api/v3/admin/) for information about working with Nylas applications, authentication, connectors, and webhook subscriptions.    Nylas API is designed using the [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer) ideology to provide simple and predictable URIs to access and modify objects. Requests support [standard HTTP methods](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html) like `GET`, `PUT`, `POST`, and `DELETE`, and [standard status codes](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html). Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise.
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.8.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use OpenAPI\Client\Configuration;
use OpenAPI\Client\ApiException;
use OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * V3SchedulingBookingsBookingIdApiTest Class Doc Comment
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class V3SchedulingBookingsBookingIdApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for v3SchedulingBookingsBookingIdDelete
     *
     * Delete a booking.
     *
     */
    public function testV3SchedulingBookingsBookingIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v3SchedulingBookingsBookingIdGet
     *
     * Return a Booking object.
     *
     */
    public function testV3SchedulingBookingsBookingIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v3SchedulingBookingsBookingIdPatch
     *
     * Reschedule a booking.
     *
     */
    public function testV3SchedulingBookingsBookingIdPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v3SchedulingBookingsBookingIdPut
     *
     * Confirm a booking.
     *
     */
    public function testV3SchedulingBookingsBookingIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
